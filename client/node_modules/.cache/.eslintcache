[{"D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\index.js":"1","D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\App.js":"2","D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\components\\Dashboard.js":"3","D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\components\\account\\SignIn.js":"4","D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\firebase\\firebase.config.js":"5","D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\components\\account\\SignUp.js":"6","D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\components\\Main.js":"7","D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\components\\Sidebar.js":"8","D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\components\\CoinCard.js":"9","D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\components\\CoinList.js":"10","D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\components\\Account.js":"11","D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\components\\navbar\\NavBar.js":"12","D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\components\\Pagination.js":"13","D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\components\\navbar\\NavControl.js":"14","D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\components\\navbar\\SearchBar.js":"15","D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\components\\navbar\\SearchResult.js":"16","D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\components\\button\\Avatar.js":"17","D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\components\\button\\ThemeSwticher.js":"18","D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\components\\LineChart.js":"19"},{"size":222,"mtime":1635086326713,"results":"20","hashOfConfig":"21"},{"size":4608,"mtime":1636178826843,"results":"22","hashOfConfig":"21"},{"size":885,"mtime":1636178375622,"results":"23","hashOfConfig":"21"},{"size":4654,"mtime":1635680717030,"results":"24","hashOfConfig":"21"},{"size":572,"mtime":1634203037667,"results":"25","hashOfConfig":"21"},{"size":5246,"mtime":1635680717913,"results":"26","hashOfConfig":"21"},{"size":1164,"mtime":1636178350789,"results":"27","hashOfConfig":"21"},{"size":5514,"mtime":1635585811035,"results":"28","hashOfConfig":"21"},{"size":2563,"mtime":1636040061941,"results":"29","hashOfConfig":"21"},{"size":5771,"mtime":1635951529814,"results":"30","hashOfConfig":"21"},{"size":215,"mtime":1634996132748,"results":"31","hashOfConfig":"21"},{"size":654,"mtime":1634457556693,"results":"32","hashOfConfig":"21"},{"size":2558,"mtime":1635951517226,"results":"33","hashOfConfig":"21"},{"size":1119,"mtime":1635585679865,"results":"34","hashOfConfig":"21"},{"size":3491,"mtime":1635171505701,"results":"35","hashOfConfig":"21"},{"size":889,"mtime":1634461678389,"results":"36","hashOfConfig":"21"},{"size":2543,"mtime":1635668497930,"results":"37","hashOfConfig":"21"},{"size":1021,"mtime":1635586079771,"results":"38","hashOfConfig":"21"},{"size":1591,"mtime":1636182008741,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1upvwqj",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\index.js",[],["81","82"],"D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\App.js",["83"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\n// Firebase\r\nimport { db } from \"./firebase/firebase.config\";\r\n/* import { collection, getDocs } from \"firebase/firestore\"; */\r\n\r\n// Components\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport SignUp from \"./components/account/SignUp\";\r\nimport SignIn from \"./components/account/SignIn\";\r\n\r\nconst App = () => {\r\n  // states\r\n  const [coins, setCoins] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const [isLogged, setIsLogged] = useState(false);\r\n  const [user, setUser] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage, setItemsPerPage] = useState(10);\r\n  const [chart, setChart] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setIsLogged(JSON.parse(window.localStorage.getItem(\"userToken\")));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    /*     const getUser = async () => {\r\n      const querySnapshot = await getDocs(collection(db, \"users\"));\r\n      querySnapshot.forEach((doc) => {\r\n        console.log(doc.id.email);\r\n      });\r\n    };\r\n\r\n    getUser(); */\r\n\r\n    window.localStorage.setItem(\"userToken\", isLogged);\r\n\r\n    // CoinMarketCap API call\r\n    const cryptoApiOptions = {\r\n      method: \"GET\",\r\n      url: \"https://pro-api.coinmarketcap.com/v1/cryptocurrency/listings/latest\",\r\n      headers: {\r\n        \"X-CMC_PRO_API_KEY\": process.env.REACT_APP_COINMARKETCAP_API_KEY,\r\n      },\r\n    };\r\n\r\n    axios\r\n      .request(cryptoApiOptions)\r\n      .then(function (res) {\r\n        var parsedData = JSON.parse(JSON.stringify(res));\r\n        /*         console.log(parsedData); */\r\n        /*         console.log(parsedData.data.data); */\r\n        setCoins(parsedData.data.data);\r\n      })\r\n      .catch(function (err) {\r\n        /*         console.error(err); */\r\n      });\r\n\r\n    // Coinranking API call\r\n    const coinRankingOptions = {\r\n      method: \"GET\",\r\n      url: \"https://coinranking1.p.rapidapi.com/coins\",\r\n      headers: {\r\n        \"x-rapidapi-host\": \"coinranking1.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": process.env.REACT_APP_COINRANKING_API_KEY,\r\n      },\r\n    };\r\n\r\n    axios\r\n      .request(coinRankingOptions)\r\n      .then(function (res) {\r\n        var parsed = JSON.parse(JSON.stringify(res));\r\n        /*         console.log(parsed.data.data.coins); */\r\n        setChart(parsed.data.data.coins);\r\n      })\r\n      .catch(function (err) {\r\n        console.error(err);\r\n      });\r\n  }, [isLogged]);\r\n\r\n  return (\r\n    <>\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n          <Route path=\"/signup\">\r\n            <SignUp\r\n              user={user}\r\n              setUser={setUser}\r\n              name={name}\r\n              setName={setName}\r\n              email={email}\r\n              setEmail={setEmail}\r\n              password={password}\r\n              setPassword={setPassword}\r\n              errorMessage={errorMessage}\r\n              setErrorMessage={setErrorMessage}\r\n            />\r\n          </Route>\r\n\r\n          {isLogged ? (\r\n            <Route path=\"/dashboard\">\r\n              <Dashboard\r\n                isLogged={isLogged}\r\n                setIsLogged={setIsLogged}\r\n                user={user}\r\n                setUser={setUser}\r\n                coins={coins}\r\n                search={search}\r\n                setSearch={setSearch}\r\n                open={open}\r\n                setOpen={setOpen}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                itemsPerPage={itemsPerPage}\r\n                setItemsPerPage={setItemsPerPage}\r\n                chart={chart}\r\n                setChart={setChart}\r\n              />\r\n            </Route>\r\n          ) : (\r\n            <Route path=\"/\" exact>\r\n              <SignIn\r\n                isLogged={isLogged}\r\n                setIsLogged={setIsLogged}\r\n                user={user}\r\n                setUser={setUser}\r\n                email={email}\r\n                setEmail={setEmail}\r\n                password={password}\r\n                setPassword={setPassword}\r\n                errorMessage={errorMessage}\r\n                setErrorMessage={setErrorMessage}\r\n              />\r\n            </Route>\r\n          )}\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\components\\Dashboard.js",[],"D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\components\\account\\SignIn.js",[],"D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\firebase\\firebase.config.js",[],"D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\components\\account\\SignUp.js",[],"D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\components\\Main.js",[],"D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\components\\Sidebar.js",[],"D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\components\\CoinCard.js",[],"D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\components\\CoinList.js",[],"D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\components\\Account.js",[],["84","85"],"D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\components\\navbar\\NavBar.js",[],"D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\components\\Pagination.js",[],"D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\components\\navbar\\NavControl.js",[],"D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\components\\navbar\\SearchBar.js",[],"D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\components\\navbar\\SearchResult.js",[],"D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\components\\button\\Avatar.js",[],"D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\components\\button\\ThemeSwticher.js",[],"D:\\webdev\\Project\\react\\crypto-dashboard\\client\\src\\components\\LineChart.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":6,"column":10,"nodeType":"92","messageId":"93","endLine":6,"endColumn":12},{"ruleId":"86","replacedBy":"94"},{"ruleId":"88","replacedBy":"95"},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'db' is defined but never used.","Identifier","unusedVar",["96"],["97"],"no-global-assign","no-unsafe-negation"]