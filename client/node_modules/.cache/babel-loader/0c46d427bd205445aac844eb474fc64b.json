{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\Project\\\\react\\\\crypto-dashboard\\\\client\\\\src\\\\components\\\\linechart\\\\LineChart.jsx\",\n    _s = $RefreshSig$();\n\nimport { Line } from \"react-chartjs-2\";\nimport { useSelector } from \"react-redux\";\nimport { selectCoin, selectCoinPriceHistory } from \"../../features/coinsSlice\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LineChart = _ref => {\n  _s();\n\n  let {\n    coinCard,\n    watchList,\n    coinInfo,\n    chartLabel,\n    chartStat,\n    priceChange\n  } = _ref;\n  const coin = useSelector(selectCoin);\n  const coinPriceHistory = useSelector(selectCoinPriceHistory);\n\n  if (coinInfo) {\n    priceChange = coin === null || coin === void 0 ? void 0 : coin.change;\n\n    for (let i = 0; i < (coinPriceHistory === null || coinPriceHistory === void 0 ? void 0 : coinPriceHistory.length); i += 1) {\n      var _coinPriceHistory$i, _coinPriceHistory$i2;\n\n      chartLabel.push(moment.unix((_coinPriceHistory$i = coinPriceHistory[i]) === null || _coinPriceHistory$i === void 0 ? void 0 : _coinPriceHistory$i.timestamp).format(\"YYYY/MM/DD h:mm a\")); // get each index from the individual array\n\n      chartStat.push((_coinPriceHistory$i2 = coinPriceHistory[i]) === null || _coinPriceHistory$i2 === void 0 ? void 0 : _coinPriceHistory$i2.price); // get each array from the response\n    }\n  }\n\n  const stat = canvas => {\n    // LineChart Display\n    const ctx = canvas.getContext(\"2d\");\n    let gradient;\n\n    if (coinCard) {\n      gradient = ctx.createLinearGradient(0, 0, 0, 110);\n    } else if (watchList) {\n      gradient = ctx.createLinearGradient(0, 0, 0, 50);\n    } else if (coinInfo) {\n      gradient = ctx.createLinearGradient(200, 200, 200, 500);\n    }\n\n    if (priceChange < 0) {\n      gradient.addColorStop(0, \"rgba(214, 69, 65, 0.5)\");\n      gradient.addColorStop(1, \"rgba(214, 69, 65,0.01)\");\n    } else if (priceChange === 0) {\n      gradient.addColorStop(0, \"rgba(150, 150, 150, 0.5)\");\n      gradient.addColorStop(1, \"rgba(150, 150, 150,0.01)\");\n    } else if (priceChange > 0) {\n      gradient.addColorStop(0, \"rgba(34, 153, 84,0.5)\");\n      gradient.addColorStop(1, \"rgba(34, 153, 84,0.01)\");\n    }\n\n    return {\n      labels: chartLabel,\n      datasets: [{\n        data: chartStat,\n        fill: true,\n        backgroundColor: gradient,\n        borderColor: priceChange < 0 && \"#e74c3c\" || priceChange === 0 && \"#b0b0b0\" || priceChange > 0 && \"#218c74\",\n        borderWidth: coinCard && \"2\" || watchList && \"1\"\n      }]\n    };\n  }; // LineChart Option\n\n\n  let options;\n\n  if (coinCard || watchList) {\n    options = {\n      scales: {\n        x: {\n          display: false\n        },\n        y: {\n          display: false\n        }\n      },\n      plugins: {\n        legend: {\n          display: false\n        },\n        tooltip: {\n          enabled: false\n        }\n      },\n      radius: 0,\n      pointHitRadius: 0,\n      tension: 0.4,\n      spanGaps: true // skip null data value\n\n    };\n  } else if (coinInfo) {\n    options = {\n      scales: {\n        x: {\n          display: true,\n          grid: {\n            display: false\n          },\n          ticks: {\n            display: false\n          }\n        },\n        y: {\n          display: true,\n          grid: {\n            display: false\n          }\n        }\n      },\n      plugins: {\n        legend: {\n          display: false\n        }\n      },\n      interaction: {\n        intersect: false,\n        mode: \"index\"\n      },\n      radius: 0,\n      tension: 0.4,\n      spanGaps: true // skip null data value\n\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: stat,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(LineChart, \"wCZ1yKi2taO4rJz+QjUeuB23jCc=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["D:/webdev/Project/react/crypto-dashboard/client/src/components/linechart/LineChart.jsx"],"names":["Line","useSelector","selectCoin","selectCoinPriceHistory","moment","LineChart","coinCard","watchList","coinInfo","chartLabel","chartStat","priceChange","coin","coinPriceHistory","change","i","length","push","unix","timestamp","format","price","stat","canvas","ctx","getContext","gradient","createLinearGradient","addColorStop","labels","datasets","data","fill","backgroundColor","borderColor","borderWidth","options","scales","x","display","y","plugins","legend","tooltip","enabled","radius","pointHitRadius","tension","spanGaps","grid","ticks","interaction","intersect","mode"],"mappings":"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","sourcesContent":["import { Line } from \"react-chartjs-2\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectCoin, selectCoinPriceHistory } from \"../../features/coinsSlice\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst LineChart = ({\r\n  coinCard,\r\n  watchList,\r\n  coinInfo,\r\n  chartLabel,\r\n  chartStat,\r\n  priceChange,\r\n}) => {\r\n  const coin = useSelector(selectCoin);\r\n  const coinPriceHistory = useSelector(selectCoinPriceHistory);\r\n\r\n  if (coinInfo) {\r\n    priceChange = coin?.change;\r\n\r\n    for (let i = 0; i < coinPriceHistory?.length; i += 1) {\r\n      chartLabel.push(\r\n        moment.unix(coinPriceHistory[i]?.timestamp).format(\"YYYY/MM/DD h:mm a\")\r\n      ); // get each index from the individual array\r\n      chartStat.push(coinPriceHistory[i]?.price); // get each array from the response\r\n    }\r\n  }\r\n\r\n  const stat = (canvas) => {\r\n    // LineChart Display\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradient;\r\n\r\n    if (coinCard) {\r\n      gradient = ctx.createLinearGradient(0, 0, 0, 110);\r\n    } else if (watchList) {\r\n      gradient = ctx.createLinearGradient(0, 0, 0, 50);\r\n    } else if (coinInfo) {\r\n      gradient = ctx.createLinearGradient(200, 200, 200, 500);\r\n    }\r\n\r\n    if (priceChange < 0) {\r\n      gradient.addColorStop(0, \"rgba(214, 69, 65, 0.5)\");\r\n      gradient.addColorStop(1, \"rgba(214, 69, 65,0.01)\");\r\n    } else if (priceChange === 0) {\r\n      gradient.addColorStop(0, \"rgba(150, 150, 150, 0.5)\");\r\n      gradient.addColorStop(1, \"rgba(150, 150, 150,0.01)\");\r\n    } else if (priceChange > 0) {\r\n      gradient.addColorStop(0, \"rgba(34, 153, 84,0.5)\");\r\n      gradient.addColorStop(1, \"rgba(34, 153, 84,0.01)\");\r\n    }\r\n\r\n    return {\r\n      labels: chartLabel,\r\n      datasets: [\r\n        {\r\n          data: chartStat,\r\n          fill: true,\r\n          backgroundColor: gradient,\r\n          borderColor:\r\n            (priceChange < 0 && \"#e74c3c\") ||\r\n            (priceChange === 0 && \"#b0b0b0\") ||\r\n            (priceChange > 0 && \"#218c74\"),\r\n          borderWidth: (coinCard && \"2\") || (watchList && \"1\"),\r\n        },\r\n      ],\r\n    };\r\n  };\r\n\r\n  // LineChart Option\r\n\r\n  let options;\r\n\r\n  if (coinCard || watchList) {\r\n    options = {\r\n      scales: {\r\n        x: {\r\n          display: false,\r\n        },\r\n        y: {\r\n          display: false,\r\n        },\r\n      },\r\n      plugins: {\r\n        legend: {\r\n          display: false,\r\n        },\r\n        tooltip: {\r\n          enabled: false,\r\n        },\r\n      },\r\n      radius: 0,\r\n      pointHitRadius: 0,\r\n      tension: 0.4,\r\n      spanGaps: true, // skip null data value\r\n    };\r\n  } else if (coinInfo) {\r\n    options = {\r\n      scales: {\r\n        x: {\r\n          display: true,\r\n          grid: {\r\n            display: false,\r\n          },\r\n          ticks: {\r\n            display: false,\r\n          },\r\n        },\r\n        y: {\r\n          display: true,\r\n          grid: {\r\n            display: false,\r\n          },\r\n        },\r\n      },\r\n      plugins: {\r\n        legend: {\r\n          display: false,\r\n        },\r\n      },\r\n      interaction: {\r\n        intersect: false,\r\n        mode: \"index\",\r\n      },\r\n      radius: 0,\r\n      tension: 0.4,\r\n      spanGaps: true, // skip null data value\r\n    };\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Line data={stat} options={options} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n"]},"metadata":{},"sourceType":"module"}