{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\Project\\\\react\\\\crypto-dashboard\\\\client\\\\src\\\\components\\\\LineChart.js\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LineChart = () => {\n  const data = canvas => {\n    const ctx = canvas.getContext(\"2d\");\n    const gradient = ctx.createLinearGradient(0, 0, 0, 500);\n    gradient.addColorStop(0, \"#33d9b2\");\n    gradient.addColorStop(1, \"rgba(250,174,50,0)\");\n    return {\n      labels: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n      datasets: [{\n        fill: true,\n        backgroundColor: gradient,\n        borderColor: \"#218c74\",\n        borderWidth: 2,\n        data: [25.0, 32.4, 22.2, 39.4, 34.2, 22.0, 23.2, 44.1, 20.0, 18.4, 19.1, 17.4]\n      }]\n    };\n  };\n\n  const options = {\n    plugins: {\n      legend: {\n        display: false\n      }\n    },\n    scales: {\n      y: {\n        display: false\n      },\n      x: {\n        display: false\n      }\n    },\n    radius: 0,\n    tension: 0.4\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["D:/webdev/Project/react/crypto-dashboard/client/src/components/LineChart.js"],"names":["React","Line","LineChart","data","canvas","ctx","getContext","gradient","createLinearGradient","addColorStop","labels","datasets","fill","backgroundColor","borderColor","borderWidth","options","plugins","legend","display","scales","y","x","radius","tension"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAMC,IAAI,GAAIC,MAAD,IAAY;AACvB,UAAMC,GAAG,GAAGD,MAAM,CAACE,UAAP,CAAkB,IAAlB,CAAZ;AACA,UAAMC,QAAQ,GAAGF,GAAG,CAACG,oBAAJ,CAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,GAAlC,CAAjB;AACAD,IAAAA,QAAQ,CAACE,YAAT,CAAsB,CAAtB,EAAyB,SAAzB;AACAF,IAAAA,QAAQ,CAACE,YAAT,CAAsB,CAAtB,EAAyB,oBAAzB;AAEA,WAAO;AACLC,MAAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,EAAzC,EAA6C,EAA7C,CADH;AAELC,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,IAAI,EAAE,IADR;AAEEC,QAAAA,eAAe,EAAEN,QAFnB;AAGEO,QAAAA,WAAW,EAAE,SAHf;AAIEC,QAAAA,WAAW,EAAE,CAJf;AAKEZ,QAAAA,IAAI,EAAE,CACJ,IADI,EACE,IADF,EACQ,IADR,EACc,IADd,EACoB,IADpB,EAC0B,IAD1B,EACgC,IADhC,EACsC,IADtC,EAC4C,IAD5C,EACkD,IADlD,EACwD,IADxD,EAEJ,IAFI;AALR,OADQ;AAFL,KAAP;AAeD,GArBD;;AAuBA,QAAMa,OAAO,GAAG;AACdC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAE;AADH;AADD,KADK;AAMdC,IAAAA,MAAM,EAAE;AACNC,MAAAA,CAAC,EAAE;AACDF,QAAAA,OAAO,EAAE;AADR,OADG;AAING,MAAAA,CAAC,EAAE;AACDH,QAAAA,OAAO,EAAE;AADR;AAJG,KANM;AAcdI,IAAAA,MAAM,EAAE,CAdM;AAedC,IAAAA,OAAO,EAAE;AAfK,GAAhB;AAkBA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAErB,IAAZ;AAAkB,MAAA,OAAO,EAAEa;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,CA/CD;;KAAMd,S;AAiDN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst LineChart = () => {\r\n  const data = (canvas) => {\r\n    const ctx = canvas.getContext(\"2d\");\r\n    const gradient = ctx.createLinearGradient(0, 0, 0, 500);\r\n    gradient.addColorStop(0, \"#33d9b2\");\r\n    gradient.addColorStop(1, \"rgba(250,174,50,0)\");\r\n\r\n    return {\r\n      labels: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n      datasets: [\r\n        {\r\n          fill: true,\r\n          backgroundColor: gradient,\r\n          borderColor: \"#218c74\",\r\n          borderWidth: 2,\r\n          data: [\r\n            25.0, 32.4, 22.2, 39.4, 34.2, 22.0, 23.2, 44.1, 20.0, 18.4, 19.1,\r\n            17.4,\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  };\r\n\r\n  const options = {\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        display: false,\r\n      },\r\n      x: {\r\n        display: false,\r\n      },\r\n    },\r\n    radius: 0,\r\n    tension: 0.4,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Line data={data} options={options} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n"]},"metadata":{},"sourceType":"module"}