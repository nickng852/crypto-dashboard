{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\Project\\\\react\\\\crypto-dashboard\\\\client\\\\src\\\\components\\\\LineChart.js\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LineChart = ({\n  coins\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: coins.map((result, index) => {\n      const chartLabel = [];\n      const chartData = [];\n\n      for (let i = 0; i < ((_result$history = result.history) === null || _result$history === void 0 ? void 0 : _result$history.length); i++) {\n        var _result$history;\n\n        chartLabel.push(i);\n        chartData.push(result.history[i]);\n      }\n\n      const data = canvas => {\n        const ctx = canvas.getContext(\"2d\");\n        const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n        gradient.addColorStop(0, \"rgba(34, 153, 84,0.35)\");\n        gradient.addColorStop(1, \"rgba(34, 153, 84,0.01)\");\n        return {\n          labels: chartLabel,\n          datasets: [{\n            data: chartData,\n            fill: true,\n            backgroundColor: gradient,\n            borderColor: \"#218c74\",\n            borderWidth: 2\n          }]\n        };\n      };\n\n      const options = {\n        scales: {\n          y: {\n            display: false\n          },\n          x: {\n            display: false\n          }\n        },\n        plugins: {\n          legend: {\n            display: false\n          }\n        },\n        radius: 0,\n        tension: 0.4\n      };\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: result.slug\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          id: \"canvas\",\n          data: data,\n          options: options\n        }, result.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    })\n  }, void 0, false);\n};\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["D:/webdev/Project/react/crypto-dashboard/client/src/components/LineChart.js"],"names":["React","Line","LineChart","coins","map","result","index","chartLabel","chartData","i","history","length","push","data","canvas","ctx","getContext","gradient","createLinearGradient","addColorStop","labels","datasets","fill","backgroundColor","borderColor","borderWidth","options","scales","y","display","x","plugins","legend","radius","tension","slug","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC/B,sBACE;AAAA,cACGA,KAAK,CAACC,GAAN,CAAU,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC5B,YAAMC,UAAU,GAAG,EAAnB;AACA,YAAMC,SAAS,GAAG,EAAlB;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,uBAAGJ,MAAM,CAACK,OAAV,oDAAG,gBAAgBC,MAAnB,CAAjB,EAA4CF,CAAC,EAA7C,EAAiD;AAAA;;AAC/CF,QAAAA,UAAU,CAACK,IAAX,CAAgBH,CAAhB;AACAD,QAAAA,SAAS,CAACI,IAAV,CAAeP,MAAM,CAACK,OAAP,CAAeD,CAAf,CAAf;AACD;;AAED,YAAMI,IAAI,GAAIC,MAAD,IAAY;AACvB,cAAMC,GAAG,GAAGD,MAAM,CAACE,UAAP,CAAkB,IAAlB,CAAZ;AACA,cAAMC,QAAQ,GAAGF,GAAG,CAACG,oBAAJ,CAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,GAAlC,CAAjB;AACAD,QAAAA,QAAQ,CAACE,YAAT,CAAsB,CAAtB,EAAyB,wBAAzB;AACAF,QAAAA,QAAQ,CAACE,YAAT,CAAsB,CAAtB,EAAyB,wBAAzB;AAEA,eAAO;AACLC,UAAAA,MAAM,EAAEb,UADH;AAELc,UAAAA,QAAQ,EAAE,CACR;AACER,YAAAA,IAAI,EAAEL,SADR;AAEEc,YAAAA,IAAI,EAAE,IAFR;AAGEC,YAAAA,eAAe,EAAEN,QAHnB;AAIEO,YAAAA,WAAW,EAAE,SAJf;AAKEC,YAAAA,WAAW,EAAE;AALf,WADQ;AAFL,SAAP;AAYD,OAlBD;;AAoBA,YAAMC,OAAO,GAAG;AACdC,QAAAA,MAAM,EAAE;AACNC,UAAAA,CAAC,EAAE;AACDC,YAAAA,OAAO,EAAE;AADR,WADG;AAINC,UAAAA,CAAC,EAAE;AACDD,YAAAA,OAAO,EAAE;AADR;AAJG,SADM;AASdE,QAAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAE;AACNH,YAAAA,OAAO,EAAE;AADH;AADD,SATK;AAcdI,QAAAA,MAAM,EAAE,CAdM;AAedC,QAAAA,OAAO,EAAE;AAfK,OAAhB;AAkBA,0BACE;AAAA,gCACE;AAAA,oBAAK7B,MAAM,CAAC8B;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,QAAT;AAAkC,UAAA,IAAI,EAAEtB,IAAxC;AAA8C,UAAA,OAAO,EAAEa;AAAvD,WAAuBrB,MAAM,CAAC+B,EAA9B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,sBADF;AAMD,KArDA;AADH,mBADF;AA0DD,CA3DD;;KAAMlC,S;AA6DN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst LineChart = ({ coins }) => {\r\n  return (\r\n    <>\r\n      {coins.map((result, index) => {\r\n        const chartLabel = [];\r\n        const chartData = [];\r\n\r\n        for (let i = 0; i < result.history?.length; i++) {\r\n          chartLabel.push(i);\r\n          chartData.push(result.history[i]);\r\n        }\r\n\r\n        const data = (canvas) => {\r\n          const ctx = canvas.getContext(\"2d\");\r\n          const gradient = ctx.createLinearGradient(0, 0, 0, 400);\r\n          gradient.addColorStop(0, \"rgba(34, 153, 84,0.35)\");\r\n          gradient.addColorStop(1, \"rgba(34, 153, 84,0.01)\");\r\n\r\n          return {\r\n            labels: chartLabel,\r\n            datasets: [\r\n              {\r\n                data: chartData,\r\n                fill: true,\r\n                backgroundColor: gradient,\r\n                borderColor: \"#218c74\",\r\n                borderWidth: 2,\r\n              },\r\n            ],\r\n          };\r\n        };\r\n\r\n        const options = {\r\n          scales: {\r\n            y: {\r\n              display: false,\r\n            },\r\n            x: {\r\n              display: false,\r\n            },\r\n          },\r\n          plugins: {\r\n            legend: {\r\n              display: false,\r\n            },\r\n          },\r\n          radius: 0,\r\n          tension: 0.4,\r\n        };\r\n\r\n        return (\r\n          <>\r\n            <h1>{result.slug}</h1>\r\n            <Line id=\"canvas\" key={result.id} data={data} options={options} />\r\n          </>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n"]},"metadata":{},"sourceType":"module"}