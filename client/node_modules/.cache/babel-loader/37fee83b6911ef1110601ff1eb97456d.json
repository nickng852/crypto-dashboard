{"ast":null,"code":"import _slicedToArray from\"D:/webdev/Project/react/crypto-dashboard/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import axios from\"axios\";import{BrowserRouter as Router,Switch,Route}from\"react-router-dom\";// Firebase\nimport{db}from\"./firebase/firebase.config\";/* import { collection, getDocs } from \"firebase/firestore\"; */ // Components\nimport Sidebar from\"./components/Sidebar\";import NavBar from\"./components/navbar/NavBar\";import SignUp from\"./components/account/SignUp\";import SignIn from\"./components/account/SignIn\";import HomePage from\"./components/HomePage\";import CoinDetails from\"./components/CoinDetails\";import Account from\"./components/account/Account\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var App=function App(){// states\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),coins=_useState2[0],setCoins=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),search=_useState4[0],setSearch=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),open=_useState6[0],setOpen=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isLogged=_useState8[0],setIsLogged=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),user=_useState10[0],setUser=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),name=_useState12[0],setName=_useState12[1];var _useState13=useState(\"\"),_useState14=_slicedToArray(_useState13,2),email=_useState14[0],setEmail=_useState14[1];var _useState15=useState(\"\"),_useState16=_slicedToArray(_useState15,2),password=_useState16[0],setPassword=_useState16[1];var _useState17=useState(\"\"),_useState18=_slicedToArray(_useState17,2),errorMessage=_useState18[0],setErrorMessage=_useState18[1];var _useState19=useState(1),_useState20=_slicedToArray(_useState19,2),currentPage=_useState20[0],setCurrentPage=_useState20[1];var _useState21=useState(10),_useState22=_slicedToArray(_useState21,2),itemsPerPage=_useState22[0],setItemsPerPage=_useState22[1];useEffect(function(){setIsLogged(JSON.parse(window.localStorage.getItem(\"userToken\")));},[]);useEffect(function(){/*     const getUser = async () => {\r\n      const querySnapshot = await getDocs(collection(db, \"users\"));\r\n      querySnapshot.forEach((doc) => {\r\n        console.log(doc.id.email);\r\n      });\r\n    };\r\n\r\n    getUser(); */window.localStorage.setItem(\"userToken\",isLogged);// Coinranking API call\nvar coinRankingOptions={method:\"GET\",url:\"https://coinranking1.p.rapidapi.com/coins\",headers:{\"x-rapidapi-host\":\"coinranking1.p.rapidapi.com\",\"x-rapidapi-key\":process.env.REACT_APP_COINRANKING_API_KEY}};axios.request(coinRankingOptions).then(function(res){var parsed=JSON.parse(JSON.stringify(res));console.log(parsed.data.data.coins);setCoins(parsed.data.data.coins);}).catch(function(err){console.error(err);});},[isLogged]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Router,{basename:process.env.PUBLIC_URL,children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/signup\",children:/*#__PURE__*/_jsx(SignUp,{user:user,setUser:setUser,name:name,setName:setName,email:email,setEmail:setEmail,password:password,setPassword:setPassword,errorMessage:errorMessage,setErrorMessage:setErrorMessage})}),user&&isLogged?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-row\",children:[/*#__PURE__*/_jsx(Sidebar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col w-full bg-gray-50 justify-items-center\",children:[/*#__PURE__*/_jsx(NavBar,{user:user,coins:coins,search:search,setSearch:setSearch,open:open,setOpen:setOpen,setIsLogged:setIsLogged}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/dashboard\",children:/*#__PURE__*/_jsx(HomePage,{coins:coins,currentPage:currentPage,setCurrentPage:setCurrentPage,itemsPerPage:itemsPerPage,setItemsPerPage:setItemsPerPage})}),/*#__PURE__*/_jsx(Route,{path:\"/cryptocurrencies/:uuid\",children:/*#__PURE__*/_jsx(CoinDetails,{coins:coins})}),/*#__PURE__*/_jsx(Route,{path:\"/profile\",children:/*#__PURE__*/_jsx(Account,{isLogged:isLogged,setIsLogged:setIsLogged,user:user,setUser:setUser,email:email,setEmail:setEmail,password:password,setPassword:setPassword,errorMessage:errorMessage,setErrorMessage:setErrorMessage})})]})]})]})}):/*#__PURE__*/_jsx(Route,{path:\"/\",exact:true,children:/*#__PURE__*/_jsx(SignIn,{isLogged:isLogged,setIsLogged:setIsLogged,user:user,setUser:setUser,email:email,setEmail:setEmail,password:password,setPassword:setPassword,errorMessage:errorMessage,setErrorMessage:setErrorMessage})})]})})});};export default App;","map":{"version":3,"sources":["D:/webdev/Project/react/crypto-dashboard/client/src/App.js"],"names":["React","useState","useEffect","axios","BrowserRouter","Router","Switch","Route","db","Sidebar","NavBar","SignUp","SignIn","HomePage","CoinDetails","Account","App","coins","setCoins","search","setSearch","open","setOpen","isLogged","setIsLogged","user","setUser","name","setName","email","setEmail","password","setPassword","errorMessage","setErrorMessage","currentPage","setCurrentPage","itemsPerPage","setItemsPerPage","JSON","parse","window","localStorage","getItem","setItem","coinRankingOptions","method","url","headers","process","env","REACT_APP_COINRANKING_API_KEY","request","then","res","parsed","stringify","console","log","data","catch","err","error","PUBLIC_URL"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\n// Firebase\r\nimport { db } from \"./firebase/firebase.config\";\r\n/* import { collection, getDocs } from \"firebase/firestore\"; */\r\n\r\n// Components\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport NavBar from \"./components/navbar/NavBar\";\r\nimport SignUp from \"./components/account/SignUp\";\r\nimport SignIn from \"./components/account/SignIn\";\r\nimport HomePage from \"./components/HomePage\";\r\nimport CoinDetails from \"./components/CoinDetails\";\r\nimport Account from \"./components/account/Account\";\r\n\r\nconst App = () => {\r\n  // states\r\n  const [coins, setCoins] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const [isLogged, setIsLogged] = useState(false);\r\n  const [user, setUser] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage, setItemsPerPage] = useState(10);\r\n\r\n  useEffect(() => {\r\n    setIsLogged(JSON.parse(window.localStorage.getItem(\"userToken\")));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    /*     const getUser = async () => {\r\n      const querySnapshot = await getDocs(collection(db, \"users\"));\r\n      querySnapshot.forEach((doc) => {\r\n        console.log(doc.id.email);\r\n      });\r\n    };\r\n\r\n    getUser(); */\r\n\r\n    window.localStorage.setItem(\"userToken\", isLogged);\r\n\r\n    // Coinranking API call\r\n    const coinRankingOptions = {\r\n      method: \"GET\",\r\n      url: \"https://coinranking1.p.rapidapi.com/coins\",\r\n      headers: {\r\n        \"x-rapidapi-host\": \"coinranking1.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": process.env.REACT_APP_COINRANKING_API_KEY,\r\n      },\r\n    };\r\n\r\n    axios\r\n      .request(coinRankingOptions)\r\n      .then(function (res) {\r\n        const parsed = JSON.parse(JSON.stringify(res));\r\n        console.log(parsed.data.data.coins);\r\n        setCoins(parsed.data.data.coins);\r\n      })\r\n      .catch(function (err) {\r\n        console.error(err);\r\n      });\r\n  }, [isLogged]);\r\n\r\n  return (\r\n    <>\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n          <Route path=\"/signup\">\r\n            <SignUp\r\n              user={user}\r\n              setUser={setUser}\r\n              name={name}\r\n              setName={setName}\r\n              email={email}\r\n              setEmail={setEmail}\r\n              password={password}\r\n              setPassword={setPassword}\r\n              errorMessage={errorMessage}\r\n              setErrorMessage={setErrorMessage}\r\n            />\r\n          </Route>\r\n\r\n          {user && isLogged ? (\r\n            <>\r\n              <div className=\"flex flex-row\">\r\n                <Sidebar />\r\n                <div className=\"flex flex-col w-full bg-gray-50 justify-items-center\">\r\n                  <NavBar\r\n                    user={user}\r\n                    coins={coins}\r\n                    search={search}\r\n                    setSearch={setSearch}\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    setIsLogged={setIsLogged}\r\n                  />\r\n                  <Switch>\r\n                    <Route path=\"/dashboard\">\r\n                      <HomePage\r\n                        coins={coins}\r\n                        currentPage={currentPage}\r\n                        setCurrentPage={setCurrentPage}\r\n                        itemsPerPage={itemsPerPage}\r\n                        setItemsPerPage={setItemsPerPage}\r\n                      />\r\n                    </Route>\r\n                    <Route path=\"/cryptocurrencies/:uuid\">\r\n                      <CoinDetails coins={coins} />\r\n                    </Route>\r\n                    <Route path=\"/profile\">\r\n                      <Account\r\n                        isLogged={isLogged}\r\n                        setIsLogged={setIsLogged}\r\n                        user={user}\r\n                        setUser={setUser}\r\n                        email={email}\r\n                        setEmail={setEmail}\r\n                        password={password}\r\n                        setPassword={setPassword}\r\n                        errorMessage={errorMessage}\r\n                        setErrorMessage={setErrorMessage}\r\n                      />\r\n                    </Route>\r\n                  </Switch>\r\n                </div>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <Route path=\"/\" exact>\r\n              <SignIn\r\n                isLogged={isLogged}\r\n                setIsLogged={setIsLogged}\r\n                user={user}\r\n                setUser={setUser}\r\n                email={email}\r\n                setEmail={setEmail}\r\n                password={password}\r\n                setPassword={setPassword}\r\n                errorMessage={errorMessage}\r\n                setErrorMessage={setErrorMessage}\r\n              />\r\n            </Route>\r\n          )}\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}