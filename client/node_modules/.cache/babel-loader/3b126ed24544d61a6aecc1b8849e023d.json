{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\Project\\\\react\\\\crypto-dashboard\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"; // Firebase\n\nimport { db } from \"./firebase/firebase.config\";\n/* import { collection, getDocs } from \"firebase/firestore\"; */\n// Components\n\nimport Dashboard from \"./components/Dashboard\";\nimport SignUp from \"./components/account/SignUp\";\nimport SignIn from \"./components/account/SignIn\";\nimport Sidebar from \"./components/Sidebar\";\nimport CoinDetails from \"./components/CoinDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // states\n  const [coins, setCoins] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const [isLogged, setIsLogged] = useState(false);\n  const [user, setUser] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(10);\n  const [chart, setChart] = useState([]);\n  useEffect(() => {\n    setIsLogged(JSON.parse(window.localStorage.getItem(\"userToken\")));\n  }, []);\n  useEffect(() => {\n    /*     const getUser = async () => {\r\n      const querySnapshot = await getDocs(collection(db, \"users\"));\r\n      querySnapshot.forEach((doc) => {\r\n        console.log(doc.id.email);\r\n      });\r\n    };\r\n      getUser(); */\n    window.localStorage.setItem(\"userToken\", isLogged); // Coinranking API call\n\n    const coinRankingOptions = {\n      method: \"GET\",\n      url: \"https://coinranking1.p.rapidapi.com/coins\",\n      headers: {\n        \"x-rapidapi-host\": \"coinranking1.p.rapidapi.com\",\n        \"x-rapidapi-key\": process.env.REACT_APP_COINRANKING_API_KEY\n      }\n    };\n    axios.request(coinRankingOptions).then(function (res) {\n      const parsed = JSON.parse(JSON.stringify(res));\n      /*        console.log(parsed.data.data.coins); */\n\n      setCoins(parsed.data.data.coins);\n    }).catch(function (err) {\n      console.error(err);\n    });\n  }, [isLogged]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      basename: process.env.PUBLIC_URL,\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(SignUp, {\n            user: user,\n            setUser: setUser,\n            name: name,\n            setName: setName,\n            email: email,\n            setEmail: setEmail,\n            password: password,\n            setPassword: setPassword,\n            errorMessage: errorMessage,\n            setErrorMessage: setErrorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), isLogged ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              exact: true,\n              children: /*#__PURE__*/_jsxDEV(Dashboard, {\n                isLogged: isLogged,\n                setIsLogged: setIsLogged,\n                user: user,\n                setUser: setUser,\n                coins: coins,\n                search: search,\n                setSearch: setSearch,\n                open: open,\n                setOpen: setOpen,\n                currentPage: currentPage,\n                setCurrentPage: setCurrentPage,\n                itemsPerPage: itemsPerPage,\n                setItemsPerPage: setItemsPerPage,\n                chart: chart,\n                setChart: setChart\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/cryptocurrencies\",\n              children: /*#__PURE__*/_jsxDEV(CoinDetails, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signin\",\n          children: /*#__PURE__*/_jsxDEV(SignIn, {\n            isLogged: isLogged,\n            setIsLogged: setIsLogged,\n            user: user,\n            setUser: setUser,\n            email: email,\n            setEmail: setEmail,\n            password: password,\n            setPassword: setPassword,\n            errorMessage: errorMessage,\n            setErrorMessage: setErrorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"muGtAUJskGQaTO4ggZR7R788Nt8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/webdev/Project/react/crypto-dashboard/client/src/App.js"],"names":["React","useState","useEffect","axios","BrowserRouter","Router","Switch","Route","db","Dashboard","SignUp","SignIn","Sidebar","CoinDetails","App","coins","setCoins","search","setSearch","open","setOpen","isLogged","setIsLogged","user","setUser","name","setName","email","setEmail","password","setPassword","errorMessage","setErrorMessage","currentPage","setCurrentPage","itemsPerPage","setItemsPerPage","chart","setChart","JSON","parse","window","localStorage","getItem","setItem","coinRankingOptions","method","url","headers","process","env","REACT_APP_COINRANKING_API_KEY","request","then","res","parsed","stringify","data","catch","err","console","error","PUBLIC_URL"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\n// Firebase\r\nimport { db } from \"./firebase/firebase.config\";\r\n/* import { collection, getDocs } from \"firebase/firestore\"; */\r\n\r\n// Components\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport SignUp from \"./components/account/SignUp\";\r\nimport SignIn from \"./components/account/SignIn\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport CoinDetails from \"./components/CoinDetails\";\r\n\r\nconst App = () => {\r\n  // states\r\n  const [coins, setCoins] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const [isLogged, setIsLogged] = useState(false);\r\n  const [user, setUser] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage, setItemsPerPage] = useState(10);\r\n  const [chart, setChart] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setIsLogged(JSON.parse(window.localStorage.getItem(\"userToken\")));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    /*     const getUser = async () => {\r\n      const querySnapshot = await getDocs(collection(db, \"users\"));\r\n      querySnapshot.forEach((doc) => {\r\n        console.log(doc.id.email);\r\n      });\r\n    };\r\n\r\n    getUser(); */\r\n\r\n    window.localStorage.setItem(\"userToken\", isLogged);\r\n\r\n    // Coinranking API call\r\n    const coinRankingOptions = {\r\n      method: \"GET\",\r\n      url: \"https://coinranking1.p.rapidapi.com/coins\",\r\n      headers: {\r\n        \"x-rapidapi-host\": \"coinranking1.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": process.env.REACT_APP_COINRANKING_API_KEY,\r\n      },\r\n    };\r\n\r\n    axios\r\n      .request(coinRankingOptions)\r\n      .then(function (res) {\r\n        const parsed = JSON.parse(JSON.stringify(res));\r\n        /*        console.log(parsed.data.data.coins); */\r\n        setCoins(parsed.data.data.coins);\r\n      })\r\n      .catch(function (err) {\r\n        console.error(err);\r\n      });\r\n  }, [isLogged]);\r\n\r\n  return (\r\n    <>\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n          <Route path=\"/signup\">\r\n            <SignUp\r\n              user={user}\r\n              setUser={setUser}\r\n              name={name}\r\n              setName={setName}\r\n              email={email}\r\n              setEmail={setEmail}\r\n              password={password}\r\n              setPassword={setPassword}\r\n              errorMessage={errorMessage}\r\n              setErrorMessage={setErrorMessage}\r\n            />\r\n          </Route>\r\n\r\n          {isLogged ? (\r\n            <>\r\n              <Sidebar />\r\n              <Switch>\r\n                <Route path=\"/\" exact>\r\n                  <Dashboard\r\n                    isLogged={isLogged}\r\n                    setIsLogged={setIsLogged}\r\n                    user={user}\r\n                    setUser={setUser}\r\n                    coins={coins}\r\n                    search={search}\r\n                    setSearch={setSearch}\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                    itemsPerPage={itemsPerPage}\r\n                    setItemsPerPage={setItemsPerPage}\r\n                    chart={chart}\r\n                    setChart={setChart}\r\n                  />\r\n                </Route>\r\n                <Route path=\"/cryptocurrencies\">\r\n                  <CoinDetails />\r\n                </Route>\r\n              </Switch>\r\n            </>\r\n          ) : (\r\n            <Route path=\"/signin\">\r\n              <SignIn\r\n                isLogged={isLogged}\r\n                setIsLogged={setIsLogged}\r\n                user={user}\r\n                setUser={setUser}\r\n                email={email}\r\n                setEmail={setEmail}\r\n                password={password}\r\n                setPassword={setPassword}\r\n                errorMessage={errorMessage}\r\n                setErrorMessage={setErrorMessage}\r\n              />\r\n            </Route>\r\n          )}\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}