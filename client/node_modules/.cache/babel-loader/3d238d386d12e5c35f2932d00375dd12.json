{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\Project\\\\react\\\\crypto-dashboard\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"; // Components\n\nimport SignIn from \"./pages/signinpage/SignIn\";\nimport SignUp from \"./pages/signuppage/SignUp\";\nimport Sidebar from \"./components/sidebar/Sidebar\";\nimport NavBar from \"./components/navbar/Navbar\";\nimport Home from \"./pages/homepage/Home\";\nimport CoinInfo from \"./pages/coininfopage/CoinInfo\";\nimport Account from \"./pages/accountpage/Account\"; // Firebase\n\nimport { db } from \"./firebase/firebase.config\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // states\n  const [form, setForm] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [token, setToken] = useState(\"\"); // firebase auth\n\n  const [user, setUser] = useState(\"\"); // firestore\n\n  const [isLogged, setIsLogged] = useState(false);\n  const [coins, setCoins] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  useEffect(() => {\n    setIsLogged(JSON.parse(window.localStorage.getItem(\"userToken\")));\n  }, []);\n  useEffect(() => {\n    // get logged user's account info from firebase after successful login\n    if (token) {\n      const getUser = async () => {\n        const docRef = doc(db, \"users\", token.uid);\n        const docSnap = await getDoc(docRef);\n        setUser(docSnap.data());\n      };\n\n      getUser();\n    }\n  }, [token]);\n  useEffect(() => {\n    window.localStorage.setItem(\"userToken\", isLogged); // Coinranking API call\n\n    const coinRankingOptions = {\n      method: \"GET\",\n      url: \"https://coinranking1.p.rapidapi.com/coins\",\n      headers: {\n        \"x-rapidapi-host\": \"coinranking1.p.rapidapi.com\",\n        \"x-rapidapi-key\": process.env.REACT_APP_COINRANKING_API_KEY\n      }\n    };\n    axios.request(coinRankingOptions).then(function (res) {\n      const parsed = JSON.parse(JSON.stringify(res));\n      /*         console.log(parsed.data.data.coins); */\n\n      setCoins(parsed.data.data.coins);\n    }).catch(function (err) {\n      console.error(err);\n    });\n  }, [isLogged]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      basename: process.env.PUBLIC_URL,\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(SignUp, {\n            token: token,\n            setToken: setToken,\n            name: name,\n            setName: setName,\n            email: email,\n            setEmail: setEmail,\n            password: password,\n            setPassword: setPassword,\n            errorMessage: errorMessage,\n            setErrorMessage: setErrorMessage,\n            form: form,\n            setForm: setForm,\n            setIsLogged: setIsLogged\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), token & isLogged ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-row\",\n            children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col w-full bg-gray-50 justify-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(NavBar, {\n                token: token,\n                setToken: setToken,\n                user: user,\n                coins: coins,\n                search: search,\n                setSearch: setSearch,\n                setIsLogged: setIsLogged\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Switch, {\n                children: [/*#__PURE__*/_jsxDEV(Route, {\n                  path: \"/dashboard\",\n                  children: /*#__PURE__*/_jsxDEV(Home, {\n                    coins: coins\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Route, {\n                  path: \"/cryptocurrencies/:uuid\",\n                  children: /*#__PURE__*/_jsxDEV(CoinInfo, {\n                    coins: coins\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Route, {\n                  path: \"/profile\",\n                  children: /*#__PURE__*/_jsxDEV(Account, {\n                    isLogged: isLogged,\n                    setIsLogged: setIsLogged,\n                    token: token,\n                    setToken: setToken,\n                    email: email,\n                    setEmail: setEmail,\n                    password: password,\n                    setPassword: setPassword,\n                    errorMessage: errorMessage,\n                    setErrorMessage: setErrorMessage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          children: /*#__PURE__*/_jsxDEV(SignIn, {\n            isLogged: isLogged,\n            setIsLogged: setIsLogged,\n            token: token,\n            setToken: setToken,\n            email: email,\n            setEmail: setEmail,\n            password: password,\n            setPassword: setPassword,\n            errorMessage: errorMessage,\n            setErrorMessage: setErrorMessage,\n            form: form,\n            setForm: setForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"EL9b9SNMB6kKIULvP07mK5vDr/g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/webdev/Project/react/crypto-dashboard/client/src/App.js"],"names":["React","useState","useEffect","axios","BrowserRouter","Router","Switch","Route","SignIn","SignUp","Sidebar","NavBar","Home","CoinInfo","Account","db","doc","getDoc","App","form","setForm","name","email","password","setName","setEmail","setPassword","errorMessage","setErrorMessage","token","setToken","user","setUser","isLogged","setIsLogged","coins","setCoins","search","setSearch","JSON","parse","window","localStorage","getItem","getUser","docRef","uid","docSnap","data","setItem","coinRankingOptions","method","url","headers","process","env","REACT_APP_COINRANKING_API_KEY","request","then","res","parsed","stringify","catch","err","console","error","PUBLIC_URL"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\n// Components\r\nimport SignIn from \"./pages/signinpage/SignIn\";\r\nimport SignUp from \"./pages/signuppage/SignUp\";\r\nimport Sidebar from \"./components/sidebar/Sidebar\";\r\nimport NavBar from \"./components/navbar/Navbar\";\r\nimport Home from \"./pages/homepage/Home\";\r\nimport CoinInfo from \"./pages/coininfopage/CoinInfo\";\r\nimport Account from \"./pages/accountpage/Account\";\r\n\r\n// Firebase\r\nimport { db } from \"./firebase/firebase.config\";\r\nimport { doc, getDoc } from \"firebase/firestore\";\r\n\r\nconst App = () => {\r\n  // states\r\n  const [form, setForm] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [token, setToken] = useState(\"\"); // firebase auth\r\n  const [user, setUser] = useState(\"\"); // firestore\r\n  const [isLogged, setIsLogged] = useState(false);\r\n  const [coins, setCoins] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setIsLogged(JSON.parse(window.localStorage.getItem(\"userToken\")));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // get logged user's account info from firebase after successful login\r\n    if (token) {\r\n      const getUser = async () => {\r\n        const docRef = doc(db, \"users\", token.uid);\r\n        const docSnap = await getDoc(docRef);\r\n\r\n        setUser(docSnap.data());\r\n      };\r\n\r\n      getUser();\r\n    }\r\n  }, [token]);\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\"userToken\", isLogged);\r\n\r\n    // Coinranking API call\r\n    const coinRankingOptions = {\r\n      method: \"GET\",\r\n      url: \"https://coinranking1.p.rapidapi.com/coins\",\r\n      headers: {\r\n        \"x-rapidapi-host\": \"coinranking1.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": process.env.REACT_APP_COINRANKING_API_KEY,\r\n      },\r\n    };\r\n\r\n    axios\r\n      .request(coinRankingOptions)\r\n      .then(function (res) {\r\n        const parsed = JSON.parse(JSON.stringify(res));\r\n        /*         console.log(parsed.data.data.coins); */\r\n        setCoins(parsed.data.data.coins);\r\n      })\r\n      .catch(function (err) {\r\n        console.error(err);\r\n      });\r\n  }, [isLogged]);\r\n\r\n  return (\r\n    <>\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n          <Route path=\"/signup\">\r\n            <SignUp\r\n              token={token}\r\n              setToken={setToken}\r\n              name={name}\r\n              setName={setName}\r\n              email={email}\r\n              setEmail={setEmail}\r\n              password={password}\r\n              setPassword={setPassword}\r\n              errorMessage={errorMessage}\r\n              setErrorMessage={setErrorMessage}\r\n              form={form}\r\n              setForm={setForm}\r\n              setIsLogged={setIsLogged}\r\n            />\r\n          </Route>\r\n\r\n          {token & isLogged ? (\r\n            <>\r\n              <div className=\"flex flex-row\">\r\n                <Sidebar />\r\n                <div className=\"flex flex-col w-full bg-gray-50 justify-items-center\">\r\n                  <NavBar\r\n                    token={token}\r\n                    setToken={setToken}\r\n                    user={user}\r\n                    coins={coins}\r\n                    search={search}\r\n                    setSearch={setSearch}\r\n                    setIsLogged={setIsLogged}\r\n                  />\r\n                  <Switch>\r\n                    <Route path=\"/dashboard\">\r\n                      <Home coins={coins} />\r\n                    </Route>\r\n                    <Route path=\"/cryptocurrencies/:uuid\">\r\n                      <CoinInfo coins={coins} />\r\n                    </Route>\r\n                    <Route path=\"/profile\">\r\n                      <Account\r\n                        isLogged={isLogged}\r\n                        setIsLogged={setIsLogged}\r\n                        token={token}\r\n                        setToken={setToken}\r\n                        email={email}\r\n                        setEmail={setEmail}\r\n                        password={password}\r\n                        setPassword={setPassword}\r\n                        errorMessage={errorMessage}\r\n                        setErrorMessage={setErrorMessage}\r\n                      />\r\n                    </Route>\r\n                  </Switch>\r\n                </div>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <Route path=\"/\" exact>\r\n              <SignIn\r\n                isLogged={isLogged}\r\n                setIsLogged={setIsLogged}\r\n                token={token}\r\n                setToken={setToken}\r\n                email={email}\r\n                setEmail={setEmail}\r\n                password={password}\r\n                setPassword={setPassword}\r\n                errorMessage={errorMessage}\r\n                setErrorMessage={setErrorMessage}\r\n                form={form}\r\n                setForm={setForm}\r\n              />\r\n            </Route>\r\n          )}\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}