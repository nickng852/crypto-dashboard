{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\Project\\\\react\\\\crypto-dashboard\\\\client\\\\src\\\\components\\\\LineChart.js\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LineChart = ({\n  coins\n}) => {\n  console.log(coins);\n  const chartLabel = [];\n  const chartData = [];\n\n  for (let i = 0; i < (coins === null || coins === void 0 ? void 0 : (_coins$history = coins.history) === null || _coins$history === void 0 ? void 0 : _coins$history.length); i++) {\n    var _coins$history;\n\n    chartLabel.push(i);\n    chartData.push(coins.history[i]);\n  }\n\n  console.log(chartData);\n\n  const data = canvas => {\n    const ctx = canvas.getContext(\"2d\");\n    const gradient = ctx.createLinearGradient(0, 0, 0, 150);\n    gradient.addColorStop(0, \"rgba(34, 153, 84,0.5)\");\n    gradient.addColorStop(1, \"rgba(34, 153, 84,0.01)\");\n    return {\n      labels: chartLabel,\n      datasets: [{\n        data: chartData,\n        fill: true,\n        backgroundColor: gradient,\n        borderColor: \"#218c74\",\n        borderWidth: 2\n      }]\n    };\n  };\n\n  const options = {\n    scales: {\n      y: {\n        display: false\n      },\n      x: {\n        display: false\n      }\n    },\n    plugins: {\n      legend: {\n        display: false\n      }\n    },\n    radius: 0,\n    tension: 0.4\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: coins.slug\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      id: \"canvas\",\n      data: data,\n      options: options\n    }, coins.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["D:/webdev/Project/react/crypto-dashboard/client/src/components/LineChart.js"],"names":["React","Line","LineChart","coins","console","log","chartLabel","chartData","i","history","length","push","data","canvas","ctx","getContext","gradient","createLinearGradient","addColorStop","labels","datasets","fill","backgroundColor","borderColor","borderWidth","options","scales","y","display","x","plugins","legend","radius","tension","slug","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,QAAMG,UAAU,GAAG,EAAnB;AACA,QAAMC,SAAS,GAAG,EAAlB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAGL,KAAH,aAAGA,KAAH,yCAAGA,KAAK,CAAEM,OAAV,mDAAG,eAAgBC,MAAnB,CAAjB,EAA4CF,CAAC,EAA7C,EAAiD;AAAA;;AAC/CF,IAAAA,UAAU,CAACK,IAAX,CAAgBH,CAAhB;AACAD,IAAAA,SAAS,CAACI,IAAV,CAAeR,KAAK,CAACM,OAAN,CAAcD,CAAd,CAAf;AACD;;AAEDJ,EAAAA,OAAO,CAACC,GAAR,CAAYE,SAAZ;;AAEA,QAAMK,IAAI,GAAIC,MAAD,IAAY;AACvB,UAAMC,GAAG,GAAGD,MAAM,CAACE,UAAP,CAAkB,IAAlB,CAAZ;AACA,UAAMC,QAAQ,GAAGF,GAAG,CAACG,oBAAJ,CAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,GAAlC,CAAjB;AACAD,IAAAA,QAAQ,CAACE,YAAT,CAAsB,CAAtB,EAAyB,uBAAzB;AACAF,IAAAA,QAAQ,CAACE,YAAT,CAAsB,CAAtB,EAAyB,wBAAzB;AAEA,WAAO;AACLC,MAAAA,MAAM,EAAEb,UADH;AAELc,MAAAA,QAAQ,EAAE,CACR;AACER,QAAAA,IAAI,EAAEL,SADR;AAEEc,QAAAA,IAAI,EAAE,IAFR;AAGEC,QAAAA,eAAe,EAAEN,QAHnB;AAIEO,QAAAA,WAAW,EAAE,SAJf;AAKEC,QAAAA,WAAW,EAAE;AALf,OADQ;AAFL,KAAP;AAYD,GAlBD;;AAoBA,QAAMC,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE;AACNC,MAAAA,CAAC,EAAE;AACDC,QAAAA,OAAO,EAAE;AADR,OADG;AAINC,MAAAA,CAAC,EAAE;AACDD,QAAAA,OAAO,EAAE;AADR;AAJG,KADM;AASdE,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AACNH,QAAAA,OAAO,EAAE;AADH;AADD,KATK;AAcdI,IAAAA,MAAM,EAAE,CAdM;AAedC,IAAAA,OAAO,EAAE;AAfK,GAAhB;AAkBA,sBACE;AAAA,4BACE;AAAA,gBAAK9B,KAAK,CAAC+B;AAAX;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,QAAT;AAAiC,MAAA,IAAI,EAAEtB,IAAvC;AAA6C,MAAA,OAAO,EAAEa;AAAtD,OAAuBtB,KAAK,CAACgC,EAA7B;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD,CAzDD;;KAAMjC,S;AA2DN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst LineChart = ({ coins }) => {\r\n  console.log(coins);\r\n\r\n  const chartLabel = [];\r\n  const chartData = [];\r\n\r\n  for (let i = 0; i < coins?.history?.length; i++) {\r\n    chartLabel.push(i);\r\n    chartData.push(coins.history[i]);\r\n  }\r\n\r\n  console.log(chartData);\r\n\r\n  const data = (canvas) => {\r\n    const ctx = canvas.getContext(\"2d\");\r\n    const gradient = ctx.createLinearGradient(0, 0, 0, 150);\r\n    gradient.addColorStop(0, \"rgba(34, 153, 84,0.5)\");\r\n    gradient.addColorStop(1, \"rgba(34, 153, 84,0.01)\");\r\n\r\n    return {\r\n      labels: chartLabel,\r\n      datasets: [\r\n        {\r\n          data: chartData,\r\n          fill: true,\r\n          backgroundColor: gradient,\r\n          borderColor: \"#218c74\",\r\n          borderWidth: 2,\r\n        },\r\n      ],\r\n    };\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      y: {\r\n        display: false,\r\n      },\r\n      x: {\r\n        display: false,\r\n      },\r\n    },\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n    radius: 0,\r\n    tension: 0.4,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>{coins.slug}</h1>\r\n      <Line id=\"canvas\" key={coins.id} data={data} options={options} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n"]},"metadata":{},"sourceType":"module"}