{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nexport const cryptoApi = createApi({\n  reducerPath: \"cryptoApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: process.env.REACT_APP_CRYPTO_API_BASE_URL\n  }),\n  refetchOnMountOrArgChange: true,\n  // forcing refetch on component mount\n\n  /*   refetchOnFocus: true, */\n  refetchOnReconnect: true,\n  endpoints: builder => ({\n    getCoins: builder.query({\n      query: () => \"/getCoins\"\n    }),\n    getCoin: builder.query({\n      query: uuid => `/getCoin/${uuid}`\n    }),\n    getCoinPriceHistory: builder.query({\n      query: _ref => {\n        let {\n          uuid,\n          timePeriod\n        } = _ref;\n        return `/getCoin/${uuid}/history/${timePeriod}`;\n      }\n    }),\n    getNews: builder.query({\n      query: _ref2 => {\n        let {\n          keyword,\n          pageSize\n        } = _ref2;\n        return `/getNews/${keyword}/${pageSize}`;\n      }\n    })\n  })\n});\nexport const {\n  useGetCoinsQuery,\n  useGetCoinQuery,\n  useGetCoinPriceHistoryQuery,\n  useGetNewsQuery\n} = cryptoApi;","map":{"version":3,"sources":["D:/webdev/Project/react/crypto-dashboard/client/src/services/cryptoApi.js"],"names":["createApi","fetchBaseQuery","cryptoApi","reducerPath","baseQuery","baseUrl","process","env","REACT_APP_CRYPTO_API_BASE_URL","refetchOnMountOrArgChange","refetchOnReconnect","endpoints","builder","getCoins","query","getCoin","uuid","getCoinPriceHistory","timePeriod","getNews","keyword","pageSize","useGetCoinsQuery","useGetCoinQuery","useGetCoinPriceHistoryQuery","useGetNewsQuery"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AAEA,OAAO,MAAMC,SAAS,GAAGF,SAAS,CAAC;AACjCG,EAAAA,WAAW,EAAE,WADoB;AAEjCC,EAAAA,SAAS,EAAEH,cAAc,CAAC;AACxBI,IAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADG,GAAD,CAFQ;AAKjCC,EAAAA,yBAAyB,EAAE,IALM;AAKA;;AACjC;AACAC,EAAAA,kBAAkB,EAAE,IAPa;AAQjCC,EAAAA,SAAS,EAAGC,OAAD,KAAc;AACvBC,IAAAA,QAAQ,EAAED,OAAO,CAACE,KAAR,CAAc;AAAEA,MAAAA,KAAK,EAAE,MAAM;AAAf,KAAd,CADa;AAGvBC,IAAAA,OAAO,EAAEH,OAAO,CAACE,KAAR,CAAc;AAAEA,MAAAA,KAAK,EAAGE,IAAD,IAAW,YAAWA,IAAK;AAApC,KAAd,CAHc;AAKvBC,IAAAA,mBAAmB,EAAEL,OAAO,CAACE,KAAR,CAAc;AACjCA,MAAAA,KAAK,EAAE;AAAA,YAAC;AAAEE,UAAAA,IAAF;AAAQE,UAAAA;AAAR,SAAD;AAAA,eAA2B,YAAWF,IAAK,YAAWE,UAAW,EAAjE;AAAA;AAD0B,KAAd,CALE;AASvBC,IAAAA,OAAO,EAAEP,OAAO,CAACE,KAAR,CAAc;AACrBA,MAAAA,KAAK,EAAE;AAAA,YAAC;AAAEM,UAAAA,OAAF;AAAWC,UAAAA;AAAX,SAAD;AAAA,eAA4B,YAAWD,OAAQ,IAAGC,QAAS,EAA3D;AAAA;AADc,KAAd;AATc,GAAd;AARsB,CAAD,CAA3B;AAuBP,OAAO,MAAM;AACXC,EAAAA,gBADW;AAEXC,EAAAA,eAFW;AAGXC,EAAAA,2BAHW;AAIXC,EAAAA;AAJW,IAKTvB,SALG","sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport const cryptoApi = createApi({\r\n  reducerPath: \"cryptoApi\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: process.env.REACT_APP_CRYPTO_API_BASE_URL,\r\n  }),\r\n  refetchOnMountOrArgChange: true, // forcing refetch on component mount\r\n  /*   refetchOnFocus: true, */\r\n  refetchOnReconnect: true,\r\n  endpoints: (builder) => ({\r\n    getCoins: builder.query({ query: () => \"/getCoins\" }),\r\n\r\n    getCoin: builder.query({ query: (uuid) => `/getCoin/${uuid}` }),\r\n\r\n    getCoinPriceHistory: builder.query({\r\n      query: ({ uuid, timePeriod }) => `/getCoin/${uuid}/history/${timePeriod}`,\r\n    }),\r\n\r\n    getNews: builder.query({\r\n      query: ({ keyword, pageSize }) => `/getNews/${keyword}/${pageSize}`,\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetCoinsQuery,\r\n  useGetCoinQuery,\r\n  useGetCoinPriceHistoryQuery,\r\n  useGetNewsQuery,\r\n} = cryptoApi;\r\n"]},"metadata":{},"sourceType":"module"}