{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\Project\\\\react\\\\crypto-dashboard\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { collection, getDocs } from \"firebase/firestore\"; // Firebase\n\nimport { db } from \"./firebase/firebase.config\"; // Components\n\nimport SignIn from \"./pages/signinpage/SignIn\";\nimport SignUp from \"./pages/signuppage/SignUp\";\nimport Sidebar from \"./components/sidebar/Sidebar\";\nimport NavBar from \"./components/navbar/Navbar\";\nimport HomePage from \"./pages/homepage/Home\";\nimport CoinDetails from \"./pages/coininfopage/CoinInfo\";\nimport Account from \"./pages/accountpage/Account\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // states\n  const [coins, setCoins] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [isLogged, setIsLogged] = useState(false);\n  const [user, setUser] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  useEffect(() => {\n    setIsLogged(JSON.parse(window.localStorage.getItem(\"userToken\")));\n  }, []);\n  useEffect(() => {\n    if (user) {\n      const getUsers = async () => {\n        const querySnapshot = await getDocs(collection(db, \"users\"));\n        console.log(querySnapshot);\n        querySnapshot.filter(doc => {\n          console.log(doc);\n        });\n      };\n\n      getUsers();\n    }\n  }, [user]);\n  useEffect(() => {\n    window.localStorage.setItem(\"userToken\", isLogged); // Coinranking API call\n\n    const coinRankingOptions = {\n      method: \"GET\",\n      url: \"https://coinranking1.p.rapidapi.com/coins\",\n      headers: {\n        \"x-rapidapi-host\": \"coinranking1.p.rapidapi.com\",\n        \"x-rapidapi-key\": process.env.REACT_APP_COINRANKING_API_KEY\n      }\n    };\n    axios.request(coinRankingOptions).then(function (res) {\n      const parsed = JSON.parse(JSON.stringify(res));\n      setCoins(parsed.data.data.coins);\n    }).catch(function (err) {\n      console.error(err);\n    });\n  }, [isLogged]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      basename: process.env.PUBLIC_URL,\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(SignUp, {\n            user: user,\n            setUser: setUser,\n            name: name,\n            setName: setName,\n            email: email,\n            setEmail: setEmail,\n            password: password,\n            setPassword: setPassword,\n            errorMessage: errorMessage,\n            setErrorMessage: setErrorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), user && isLogged ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-row\",\n            children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col w-full bg-gray-50 justify-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(NavBar, {\n                user: user,\n                setUser: setUser,\n                coins: coins,\n                search: search,\n                setSearch: setSearch,\n                setIsLogged: setIsLogged\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Switch, {\n                children: [/*#__PURE__*/_jsxDEV(Route, {\n                  path: \"/dashboard\",\n                  children: /*#__PURE__*/_jsxDEV(HomePage, {\n                    coins: coins\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Route, {\n                  path: \"/cryptocurrencies/:uuid\",\n                  children: /*#__PURE__*/_jsxDEV(CoinDetails, {\n                    coins: coins\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Route, {\n                  path: \"/profile\",\n                  children: /*#__PURE__*/_jsxDEV(Account, {\n                    isLogged: isLogged,\n                    setIsLogged: setIsLogged,\n                    user: user,\n                    setUser: setUser,\n                    email: email,\n                    setEmail: setEmail,\n                    password: password,\n                    setPassword: setPassword,\n                    errorMessage: errorMessage,\n                    setErrorMessage: setErrorMessage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          children: /*#__PURE__*/_jsxDEV(SignIn, {\n            isLogged: isLogged,\n            setIsLogged: setIsLogged,\n            user: user,\n            setUser: setUser,\n            email: email,\n            setEmail: setEmail,\n            password: password,\n            setPassword: setPassword,\n            errorMessage: errorMessage,\n            setErrorMessage: setErrorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"JaLgoze4pFIvwyMHTEm1k7EcwGA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/webdev/Project/react/crypto-dashboard/client/src/App.js"],"names":["React","useState","useEffect","axios","BrowserRouter","Router","Switch","Route","collection","getDocs","db","SignIn","SignUp","Sidebar","NavBar","HomePage","CoinDetails","Account","App","coins","setCoins","search","setSearch","isLogged","setIsLogged","user","setUser","name","setName","email","setEmail","password","setPassword","errorMessage","setErrorMessage","JSON","parse","window","localStorage","getItem","getUsers","querySnapshot","console","log","filter","doc","setItem","coinRankingOptions","method","url","headers","process","env","REACT_APP_COINRANKING_API_KEY","request","then","res","parsed","stringify","data","catch","err","error","PUBLIC_URL"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { collection, getDocs } from \"firebase/firestore\";\r\n\r\n// Firebase\r\nimport { db } from \"./firebase/firebase.config\";\r\n\r\n// Components\r\nimport SignIn from \"./pages/signinpage/SignIn\";\r\nimport SignUp from \"./pages/signuppage/SignUp\";\r\nimport Sidebar from \"./components/sidebar/Sidebar\";\r\nimport NavBar from \"./components/navbar/Navbar\";\r\nimport HomePage from \"./pages/homepage/Home\";\r\nimport CoinDetails from \"./pages/coininfopage/CoinInfo\";\r\nimport Account from \"./pages/accountpage/Account\";\r\n\r\nconst App = () => {\r\n  // states\r\n  const [coins, setCoins] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [isLogged, setIsLogged] = useState(false);\r\n  const [user, setUser] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setIsLogged(JSON.parse(window.localStorage.getItem(\"userToken\")));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      const getUsers = async () => {\r\n        const querySnapshot = await getDocs(collection(db, \"users\"));\r\n        console.log(querySnapshot);\r\n\r\n        querySnapshot.filter((doc) => {\r\n          console.log(doc);\r\n        });\r\n      };\r\n\r\n      getUsers();\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\"userToken\", isLogged);\r\n\r\n    // Coinranking API call\r\n    const coinRankingOptions = {\r\n      method: \"GET\",\r\n      url: \"https://coinranking1.p.rapidapi.com/coins\",\r\n      headers: {\r\n        \"x-rapidapi-host\": \"coinranking1.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": process.env.REACT_APP_COINRANKING_API_KEY,\r\n      },\r\n    };\r\n\r\n    axios\r\n      .request(coinRankingOptions)\r\n      .then(function (res) {\r\n        const parsed = JSON.parse(JSON.stringify(res));\r\n        setCoins(parsed.data.data.coins);\r\n      })\r\n      .catch(function (err) {\r\n        console.error(err);\r\n      });\r\n  }, [isLogged]);\r\n\r\n  return (\r\n    <>\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n          <Route path=\"/signup\">\r\n            <SignUp\r\n              user={user}\r\n              setUser={setUser}\r\n              name={name}\r\n              setName={setName}\r\n              email={email}\r\n              setEmail={setEmail}\r\n              password={password}\r\n              setPassword={setPassword}\r\n              errorMessage={errorMessage}\r\n              setErrorMessage={setErrorMessage}\r\n            />\r\n          </Route>\r\n\r\n          {user && isLogged ? (\r\n            <>\r\n              <div className=\"flex flex-row\">\r\n                <Sidebar />\r\n                <div className=\"flex flex-col w-full bg-gray-50 justify-items-center\">\r\n                  <NavBar\r\n                    user={user}\r\n                    setUser={setUser}\r\n                    coins={coins}\r\n                    search={search}\r\n                    setSearch={setSearch}\r\n                    setIsLogged={setIsLogged}\r\n                  />\r\n                  <Switch>\r\n                    <Route path=\"/dashboard\">\r\n                      <HomePage coins={coins} />\r\n                    </Route>\r\n                    <Route path=\"/cryptocurrencies/:uuid\">\r\n                      <CoinDetails coins={coins} />\r\n                    </Route>\r\n                    <Route path=\"/profile\">\r\n                      <Account\r\n                        isLogged={isLogged}\r\n                        setIsLogged={setIsLogged}\r\n                        user={user}\r\n                        setUser={setUser}\r\n                        email={email}\r\n                        setEmail={setEmail}\r\n                        password={password}\r\n                        setPassword={setPassword}\r\n                        errorMessage={errorMessage}\r\n                        setErrorMessage={setErrorMessage}\r\n                      />\r\n                    </Route>\r\n                  </Switch>\r\n                </div>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <Route path=\"/\" exact>\r\n              <SignIn\r\n                isLogged={isLogged}\r\n                setIsLogged={setIsLogged}\r\n                user={user}\r\n                setUser={setUser}\r\n                email={email}\r\n                setEmail={setEmail}\r\n                password={password}\r\n                setPassword={setPassword}\r\n                errorMessage={errorMessage}\r\n                setErrorMessage={setErrorMessage}\r\n              />\r\n            </Route>\r\n          )}\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}