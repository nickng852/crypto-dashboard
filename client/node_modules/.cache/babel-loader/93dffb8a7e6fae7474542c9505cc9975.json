{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\Project\\\\react\\\\crypto-dashboard\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // React Router Setup\n\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\"; // Fetch data\n\nimport axios from \"axios\"; // Firebase\n\nimport { initializeApp } from \"firebase/app\";\nimport firebaseConfig from \"./auth/Firebase\"; // Components\n\nimport Dashboard from \"./components/Dashboard\";\nimport SignUp from \"./components/account/SignUp\";\nimport SignIn from \"./components/account/SignIn\"; // Initialize Firebase\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ninitializeApp(firebaseConfig);\n\nconst App = () => {\n  _s();\n\n  // states\n  const [coins, setCoins] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const [isLogged, setIsLogged] = useState(false);\n  const [user, setUser] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  useEffect(() => {\n    const cryptoApiOptions = {\n      method: \"GET\",\n      url: \"https://pro-api.coinmarketcap.com/v1/cryptocurrency/listings/latest\",\n      headers: {\n        \"X-CMC_PRO_API_KEY\": process.env.REACT_APP_COINMARKETCAP_API_KEY\n      }\n    };\n    axios.request(cryptoApiOptions).then(function (res) {\n      var parsedData = JSON.parse(JSON.stringify(res));\n      console.log(parsedData);\n      console.log(parsedData.data.data);\n      setCoins(parsedData.data.data);\n    }).catch(function (err) {\n      console.error(err);\n    });\n    /*      const cryptoNewsApiOptions = {\r\n      method: \"GET\",\r\n      url: \"https://crypto-news5.p.rapidapi.com/\",\r\n      headers: {\r\n        \"x-rapidapi-host\": \"crypto-news5.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": process.env.REACT_APP_CRYPTONEWS_API_KEY,\r\n      },\r\n    };\r\n      axios\r\n      .request(cryptoNewsApiOptions)\r\n      .then(function (res) {\r\n        console.log(res);\r\n      })\r\n      .catch(function (err) {\r\n        console.error(err);\r\n      }); */\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      basename: process.env.PUBLIC_URL,\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(SignUp, {\n            user: user,\n            setUser: setUser,\n            email: email,\n            setEmail: setEmail,\n            password: password,\n            setPassword: setPassword,\n            errorMessage: errorMessage,\n            setErrorMessage: setErrorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          children: isLogged ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(SignIn, {\n            isLogged: isLogged,\n            setIsLogged: setIsLogged,\n            user: user,\n            setUser: setUser,\n            email: email,\n            setEmail: setEmail,\n            password: password,\n            setPassword: setPassword,\n            errorMessage: errorMessage,\n            setErrorMessage: setErrorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"aWPcP1B/TWMx7gCYa5I+3MEj/m0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/webdev/Project/react/crypto-dashboard/client/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","Redirect","axios","initializeApp","firebaseConfig","Dashboard","SignUp","SignIn","App","coins","setCoins","search","setSearch","open","setOpen","isLogged","setIsLogged","user","setUser","email","setEmail","password","setPassword","errorMessage","setErrorMessage","cryptoApiOptions","method","url","headers","process","env","REACT_APP_COINMARKETCAP_API_KEY","request","then","res","parsedData","JSON","parse","stringify","console","log","data","catch","err","error","PUBLIC_URL"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,QAJF,QAKO,kBALP,C,CAOA;;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,OAAOC,cAAP,MAA2B,iBAA3B,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,MAAP,MAAmB,6BAAnB,C,CAEA;;;;AACAJ,aAAa,CAACC,cAAD,CAAb;;AAEA,MAAMI,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACgB,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACoB,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACsB,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACwB,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC0B,QAAD,EAAWC,WAAX,IAA0B3B,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC4B,YAAD,EAAeC,eAAf,IAAkC7B,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM6B,gBAAgB,GAAG;AACvBC,MAAAA,MAAM,EAAE,KADe;AAEvBC,MAAAA,GAAG,EAAE,qEAFkB;AAGvBC,MAAAA,OAAO,EAAE;AACP,6BAAqBC,OAAO,CAACC,GAAR,CAAYC;AAD1B;AAHc,KAAzB;AAQA7B,IAAAA,KAAK,CACF8B,OADH,CACWP,gBADX,EAEGQ,IAFH,CAEQ,UAAUC,GAAV,EAAe;AACnB,UAAIC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,GAAf,CAAX,CAAjB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,UAAU,CAACM,IAAX,CAAgBA,IAA5B;AACA/B,MAAAA,QAAQ,CAACyB,UAAU,CAACM,IAAX,CAAgBA,IAAjB,CAAR;AACD,KAPH,EAQGC,KARH,CAQS,UAAUC,GAAV,EAAe;AACpBJ,MAAAA,OAAO,CAACK,KAAR,CAAcD,GAAd;AACD,KAVH;AAYA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEG,GAtCQ,EAsCN,EAtCM,CAAT;AAwCA,sBACE;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEd,OAAO,CAACC,GAAR,CAAYe,UAA9B;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,IAAI,EAAE5B,IADR;AAEE,YAAA,OAAO,EAAEC,OAFX;AAGE,YAAA,KAAK,EAAEC,KAHT;AAIE,YAAA,QAAQ,EAAEC,QAJZ;AAKE,YAAA,QAAQ,EAAEC,QALZ;AAME,YAAA,WAAW,EAAEC,WANf;AAOE,YAAA,YAAY,EAAEC,YAPhB;AAQE,YAAA,eAAe,EAAEC;AARnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAaE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,KAAK,MAArB;AAAA,oBACGT,QAAQ,gBACP,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBADO,gBAGP,QAAC,MAAD;AACE,YAAA,QAAQ,EAAEA,QADZ;AAEE,YAAA,WAAW,EAAEC,WAFf;AAGE,YAAA,IAAI,EAAEC,IAHR;AAIE,YAAA,OAAO,EAAEC,OAJX;AAKE,YAAA,KAAK,EAAEC,KALT;AAME,YAAA,QAAQ,EAAEC,QANZ;AAOE,YAAA,QAAQ,EAAEC,QAPZ;AAQE,YAAA,WAAW,EAAEC,WARf;AASE,YAAA,YAAY,EAAEC,YAThB;AAUE,YAAA,eAAe,EAAEC;AAVnB;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAsCD,CAzFD;;GAAMhB,G;;KAAAA,G;AA2FN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\n// React Router Setup\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\n// Fetch data\r\nimport axios from \"axios\";\r\n\r\n// Firebase\r\nimport { initializeApp } from \"firebase/app\";\r\nimport firebaseConfig from \"./auth/Firebase\";\r\n\r\n// Components\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport SignUp from \"./components/account/SignUp\";\r\nimport SignIn from \"./components/account/SignIn\";\r\n\r\n// Initialize Firebase\r\ninitializeApp(firebaseConfig);\r\n\r\nconst App = () => {\r\n  // states\r\n  const [coins, setCoins] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const [isLogged, setIsLogged] = useState(false);\r\n  const [user, setUser] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const cryptoApiOptions = {\r\n      method: \"GET\",\r\n      url: \"https://pro-api.coinmarketcap.com/v1/cryptocurrency/listings/latest\",\r\n      headers: {\r\n        \"X-CMC_PRO_API_KEY\": process.env.REACT_APP_COINMARKETCAP_API_KEY,\r\n      },\r\n    };\r\n\r\n    axios\r\n      .request(cryptoApiOptions)\r\n      .then(function (res) {\r\n        var parsedData = JSON.parse(JSON.stringify(res));\r\n        console.log(parsedData);\r\n        console.log(parsedData.data.data);\r\n        setCoins(parsedData.data.data);\r\n      })\r\n      .catch(function (err) {\r\n        console.error(err);\r\n      });\r\n\r\n    /*      const cryptoNewsApiOptions = {\r\n      method: \"GET\",\r\n      url: \"https://crypto-news5.p.rapidapi.com/\",\r\n      headers: {\r\n        \"x-rapidapi-host\": \"crypto-news5.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": process.env.REACT_APP_CRYPTONEWS_API_KEY,\r\n      },\r\n    };\r\n\r\n    axios\r\n      .request(cryptoNewsApiOptions)\r\n      .then(function (res) {\r\n        console.log(res);\r\n      })\r\n      .catch(function (err) {\r\n        console.error(err);\r\n      }); */\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n          <Route path=\"/signup\">\r\n            <SignUp\r\n              user={user}\r\n              setUser={setUser}\r\n              email={email}\r\n              setEmail={setEmail}\r\n              password={password}\r\n              setPassword={setPassword}\r\n              errorMessage={errorMessage}\r\n              setErrorMessage={setErrorMessage}\r\n            />\r\n          </Route>\r\n          <Route path=\"/\" exact>\r\n            {isLogged ? (\r\n              <Redirect to=\"/dashboard\" />\r\n            ) : (\r\n              <SignIn\r\n                isLogged={isLogged}\r\n                setIsLogged={setIsLogged}\r\n                user={user}\r\n                setUser={setUser}\r\n                email={email}\r\n                setEmail={setEmail}\r\n                password={password}\r\n                setPassword={setPassword}\r\n                errorMessage={errorMessage}\r\n                setErrorMessage={setErrorMessage}\r\n              />\r\n            )}\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}