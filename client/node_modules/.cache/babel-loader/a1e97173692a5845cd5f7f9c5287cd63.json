{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\Project\\\\react\\\\crypto-dashboard\\\\client\\\\src\\\\components\\\\LineChart.js\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LineChart = ({\n  chart\n}) => {\n  /*   const ctx = canvas.getContext(\"2d\");\r\n  const gradient = ctx.createLinearGradient(0, 0, 0, 500);\r\n  gradient.addColorStop(0, \"rgba(34, 153, 84,0.4)\");\r\n  gradient.addColorStop(1, \"rgba(34, 153, 84,0.01)\"); // rgba color is required. */\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: chart.map(result => {\n      /*         const coinPrice = [];\r\n        for (let i = 0; i < result.history?.length; i += 1) {\r\n        coinPrice.push(chart[i].history[i]);\r\n      }\r\n        console.log(coinPrice); */\n      const data = {\n        labels: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n        datasets: [{\n          data: coinPrice,\n          fill: true,\n          backgroundColor: \"lightblue\",\n          borderColor: \"#218c74\",\n          borderWidth: 3\n        }]\n      };\n      const options = {\n        scales: {\n          y: {\n            display: false\n          },\n          x: {\n            display: false\n          }\n        },\n        plugins: {\n          legend: {\n            display: false\n          }\n        },\n        radius: 0,\n        tension: 0.4\n      };\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: result.slug\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          data: data,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    })\n  }, void 0, false);\n};\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["D:/webdev/Project/react/crypto-dashboard/client/src/components/LineChart.js"],"names":["React","Line","LineChart","chart","map","result","data","labels","datasets","coinPrice","fill","backgroundColor","borderColor","borderWidth","options","scales","y","display","x","plugins","legend","radius","tension","slug"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC/B;AACF;AACA;AACA;AAEE,sBACE;AAAA,cACGA,KAAK,CAACC,GAAN,CAAWC,MAAD,IAAY;AACrB;AACR;AACA;AACA;AACA;AAIQ,YAAMC,IAAI,GAAG;AACXC,QAAAA,MAAM,EAAE,CACN,EADM,EAEN,EAFM,EAGN,EAHM,EAIN,EAJM,EAKN,EALM,EAMN,EANM,EAON,EAPM,EAQN,EARM,EASN,EATM,EAUN,EAVM,EAWN,EAXM,EAYN,EAZM,EAaN,EAbM,EAcN,EAdM,EAeN,EAfM,EAgBN,EAhBM,EAiBN,EAjBM,EAkBN,EAlBM,EAmBN,EAnBM,EAoBN,EApBM,EAqBN,EArBM,EAsBN,EAtBM,EAuBN,EAvBM,EAwBN,EAxBM,EAyBN,EAzBM,EA0BN,EA1BM,EA2BN,EA3BM,CADG;AA8BXC,QAAAA,QAAQ,EAAE,CACR;AACEF,UAAAA,IAAI,EAAEG,SADR;AAEEC,UAAAA,IAAI,EAAE,IAFR;AAGEC,UAAAA,eAAe,EAAE,WAHnB;AAIEC,UAAAA,WAAW,EAAE,SAJf;AAKEC,UAAAA,WAAW,EAAE;AALf,SADQ;AA9BC,OAAb;AAyCA,YAAMC,OAAO,GAAG;AACdC,QAAAA,MAAM,EAAE;AACNC,UAAAA,CAAC,EAAE;AACDC,YAAAA,OAAO,EAAE;AADR,WADG;AAINC,UAAAA,CAAC,EAAE;AACDD,YAAAA,OAAO,EAAE;AADR;AAJG,SADM;AASdE,QAAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAE;AACNH,YAAAA,OAAO,EAAE;AADH;AADD,SATK;AAcdI,QAAAA,MAAM,EAAE,CAdM;AAedC,QAAAA,OAAO,EAAE;AAfK,OAAhB;AAkBA,0BACE;AAAA,gCACE;AAAA,oBAAKjB,MAAM,CAACkB;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEjB,IAAZ;AAAkB,UAAA,OAAO,EAAEQ;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,sBADF;AAMD,KA1EA;AADH,mBADF;AA+ED,CArFD;;KAAMZ,S;AAuFN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst LineChart = ({ chart }) => {\r\n  /*   const ctx = canvas.getContext(\"2d\");\r\n  const gradient = ctx.createLinearGradient(0, 0, 0, 500);\r\n  gradient.addColorStop(0, \"rgba(34, 153, 84,0.4)\");\r\n  gradient.addColorStop(1, \"rgba(34, 153, 84,0.01)\"); // rgba color is required. */\r\n\r\n  return (\r\n    <>\r\n      {chart.map((result) => {\r\n        /*         const coinPrice = [];\r\n\r\n        for (let i = 0; i < result.history?.length; i += 1) {\r\n          coinPrice.push(chart[i].history[i]);\r\n        }\r\n\r\n        console.log(coinPrice); */\r\n\r\n        const data = {\r\n          labels: [\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n          ],\r\n          datasets: [\r\n            {\r\n              data: coinPrice,\r\n              fill: true,\r\n              backgroundColor: \"lightblue\",\r\n              borderColor: \"#218c74\",\r\n              borderWidth: 3,\r\n            },\r\n          ],\r\n        };\r\n\r\n        const options = {\r\n          scales: {\r\n            y: {\r\n              display: false,\r\n            },\r\n            x: {\r\n              display: false,\r\n            },\r\n          },\r\n          plugins: {\r\n            legend: {\r\n              display: false,\r\n            },\r\n          },\r\n          radius: 0,\r\n          tension: 0.4,\r\n        };\r\n\r\n        return (\r\n          <>\r\n            <h1>{result.slug}</h1>\r\n            <Line data={data} options={options} />\r\n          </>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n"]},"metadata":{},"sourceType":"module"}