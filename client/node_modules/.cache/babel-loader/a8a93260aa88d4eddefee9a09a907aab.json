{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\Project\\\\react\\\\crypto-dashboard\\\\client\\\\src\\\\components\\\\CoinCard.js\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\"; // chart library\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CoinCard = ({\n  coins\n}) => {\n  const slicedCoins = coins.slice(0, 5); // decide how many CoinCards will be displayed\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap items-center justify-center max-w-8xl mt-14\",\n      children: slicedCoins.map((result, index) => {\n        const icon = result.iconUrl;\n        const name = result.name;\n        const symbol = result.symbol;\n        const price = Number(result.price); // string returned from API\n\n        const priceChange = result.change;\n        const AbsPriceChange = Math.abs(priceChange); // trim \"-\" for display\n\n        const chartLabel = [];\n        const chartData = [];\n\n        for (let i = 0; i < ((_result$history = result.history) === null || _result$history === void 0 ? void 0 : _result$history.length); i++) {\n          var _result$history;\n\n          chartLabel.push(i); // get each index from the individual array\n\n          chartData.push(result.history[i]); // get each array from the response\n        }\n\n        const data = canvas => {\n          const ctx = canvas.getContext(\"2d\");\n          const gradient = ctx.createLinearGradient(0, 0, 0, 110);\n          gradient.addColorStop(0, \"rgba(34, 153, 84,0.5)\");\n          gradient.addColorStop(1, \"rgba(34, 153, 84,0.01)\");\n          return {\n            labels: chartLabel,\n            datasets: [{\n              data: chartData,\n              fill: true,\n              backgroundColor: gradient,\n              borderColor: \"#218c74\",\n              borderWidth: 2\n            }]\n          };\n        };\n\n        const options = {\n          scales: {\n            y: {\n              display: false\n            },\n            x: {\n              display: false\n            }\n          },\n          plugins: {\n            legend: {\n              display: false\n            }\n          },\n          radius: 0,\n          tension: 0.4\n        };\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative m-5 overflow-hidden bg-white rounded-lg shadow w-60 md:w-72 dark:bg-gray-600\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: icon,\n            alt: crypto,\n            className: \"absolute w-24 h-24 rounded-full opacity-95 -top-6 -right-6 md:-right-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-4 py-5 sm:p-5\",\n            children: /*#__PURE__*/_jsxDEV(\"dl\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"px-2 py-1 text-xs font-medium leading-5 text-gray-600 truncate bg-gray-200 rounded-md\",\n                children: symbol\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"dd\", {\n                className: \"mt-4 font-semibold text-gray-500\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"mr-3 dark:text-gray-100\",\n                  children: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `${priceChange < 0 ? \"text-red-600\" : \"text-green-500\"}`,\n                  children: `${priceChange < 0 ? \"▼ \" + AbsPriceChange.toFixed(2) + \"%\" : \"▲ \" + AbsPriceChange.toFixed(2) + \"%\"}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"dd\", {\n                className: \"mt-1 text-3xl font-semibold leading-9 text-gray-900 dark:text-gray-100\",\n                children: [\"$\", `${price < 1 ? price.toLocaleString(undefined, {\n                  maximumFractionDigits: 10\n                }) : price.toLocaleString(undefined, {\n                  maximumFractionDigits: 2\n                })}`]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-4 pb-5 sm:pb-5\",\n            children: /*#__PURE__*/_jsxDEV(Line, {\n              data: data,\n              options: options\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = CoinCard;\nexport default CoinCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinCard\");","map":{"version":3,"sources":["D:/webdev/Project/react/crypto-dashboard/client/src/components/CoinCard.js"],"names":["React","Line","CoinCard","coins","slicedCoins","slice","map","result","index","icon","iconUrl","name","symbol","price","Number","priceChange","change","AbsPriceChange","Math","abs","chartLabel","chartData","i","history","length","push","data","canvas","ctx","getContext","gradient","createLinearGradient","addColorStop","labels","datasets","fill","backgroundColor","borderColor","borderWidth","options","scales","y","display","x","plugins","legend","radius","tension","crypto","toFixed","toLocaleString","undefined","maximumFractionDigits"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\"; // chart library\r\n\r\nconst CoinCard = ({ coins }) => {\r\n  const slicedCoins = coins.slice(0, 5); // decide how many CoinCards will be displayed\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-wrap items-center justify-center max-w-8xl mt-14\">\r\n        {slicedCoins.map((result, index) => {\r\n          const icon = result.iconUrl;\r\n          const name = result.name;\r\n          const symbol = result.symbol;\r\n          const price = Number(result.price); // string returned from API\r\n          const priceChange = result.change;\r\n          const AbsPriceChange = Math.abs(priceChange); // trim \"-\" for display\r\n\r\n          const chartLabel = [];\r\n          const chartData = [];\r\n\r\n          for (let i = 0; i < result.history?.length; i++) {\r\n            chartLabel.push(i); // get each index from the individual array\r\n            chartData.push(result.history[i]); // get each array from the response\r\n          }\r\n\r\n          const data = (canvas) => {\r\n            const ctx = canvas.getContext(\"2d\");\r\n            const gradient = ctx.createLinearGradient(0, 0, 0, 110);\r\n            gradient.addColorStop(0, \"rgba(34, 153, 84,0.5)\");\r\n            gradient.addColorStop(1, \"rgba(34, 153, 84,0.01)\");\r\n\r\n            return {\r\n              labels: chartLabel,\r\n              datasets: [\r\n                {\r\n                  data: chartData,\r\n                  fill: true,\r\n                  backgroundColor: gradient,\r\n                  borderColor: \"#218c74\",\r\n                  borderWidth: 2,\r\n                },\r\n              ],\r\n            };\r\n          };\r\n\r\n          const options = {\r\n            scales: {\r\n              y: {\r\n                display: false,\r\n              },\r\n              x: {\r\n                display: false,\r\n              },\r\n            },\r\n            plugins: {\r\n              legend: {\r\n                display: false,\r\n              },\r\n            },\r\n            radius: 0,\r\n            tension: 0.4,\r\n          };\r\n\r\n          return (\r\n            <div\r\n              className=\"relative m-5 overflow-hidden bg-white rounded-lg shadow w-60 md:w-72 dark:bg-gray-600\"\r\n              key={index}\r\n            >\r\n              <img\r\n                src={icon}\r\n                alt={crypto}\r\n                className=\"absolute w-24 h-24 rounded-full opacity-95 -top-6 -right-6 md:-right-4\"\r\n              />\r\n              <div className=\"px-4 py-5 sm:p-5\">\r\n                <dl>\r\n                  <span className=\"px-2 py-1 text-xs font-medium leading-5 text-gray-600 truncate bg-gray-200 rounded-md\">\r\n                    {symbol}\r\n                  </span>\r\n                  <dd className=\"mt-4 font-semibold text-gray-500\">\r\n                    <span className=\"mr-3 dark:text-gray-100\">{name}</span>\r\n                    <span\r\n                      className={`${\r\n                        priceChange < 0 ? \"text-red-600\" : \"text-green-500\"\r\n                      }`}\r\n                    >\r\n                      {`${\r\n                        priceChange < 0\r\n                          ? \"▼ \" + AbsPriceChange.toFixed(2) + \"%\"\r\n                          : \"▲ \" + AbsPriceChange.toFixed(2) + \"%\"\r\n                      }`}\r\n                    </span>\r\n                  </dd>\r\n                  <dd className=\"mt-1 text-3xl font-semibold leading-9 text-gray-900 dark:text-gray-100\">\r\n                    $\r\n                    {`${\r\n                      price < 1\r\n                        ? price.toLocaleString(undefined, {\r\n                            maximumFractionDigits: 10,\r\n                          })\r\n                        : price.toLocaleString(undefined, {\r\n                            maximumFractionDigits: 2,\r\n                          })\r\n                    }`}\r\n                  </dd>\r\n                </dl>\r\n              </div>\r\n              <div className=\"px-4 pb-5 sm:pb-5\">\r\n                <Line key={index} data={data} options={options} />\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CoinCard;\r\n"]},"metadata":{},"sourceType":"module"}