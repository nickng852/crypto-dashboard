{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\Project\\\\react\\\\crypto-dashboard\\\\client\\\\src\\\\components\\\\LineChart.js\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LineChart = ({\n  history\n}) => {\n  /*   const ctx = canvas.getContext(\"2d\");\r\n  const gradient = ctx.createLinearGradient(0, 0, 0, 500);\r\n  gradient.addColorStop(0, \"rgba(34, 153, 84,0.4)\");\r\n  gradient.addColorStop(1, \"rgba(34, 153, 84,0.01)\"); // rgba color is required. */\n  const coinHistory = history.map(result => result.history);\n  console.log(coinHistory[0]);\n  const data = {\n    labels: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    datasets: [{\n      data: coinHistory[67],\n      fill: true,\n      backgroundColor: \"lightblue\",\n      borderColor: \"#218c74\",\n      borderWidth: 3\n    }]\n  };\n  const options = {\n    scales: {\n      y: {\n        display: false\n      },\n      x: {\n        display: false\n      }\n    },\n    plugins: {\n      legend: {\n        display: false\n      }\n    },\n    radius: 0,\n    tension: 0.4\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: history.map(result => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: data,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false);\n    })\n  }, void 0, false);\n};\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["D:/webdev/Project/react/crypto-dashboard/client/src/components/LineChart.js"],"names":["React","Line","LineChart","history","coinHistory","map","result","console","log","data","labels","datasets","fill","backgroundColor","borderColor","borderWidth","options","scales","y","display","x","plugins","legend","radius","tension"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACjC;AACF;AACA;AACA;AAEE,QAAMC,WAAW,GAAGD,OAAO,CAACE,GAAR,CAAaC,MAAD,IAAYA,MAAM,CAACH,OAA/B,CAApB;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAW,CAAC,CAAD,CAAvB;AAEA,QAAMK,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAE,CACN,EADM,EAEN,EAFM,EAGN,EAHM,EAIN,EAJM,EAKN,EALM,EAMN,EANM,EAON,EAPM,EAQN,EARM,EASN,EATM,EAUN,EAVM,EAWN,EAXM,EAYN,EAZM,EAaN,EAbM,EAcN,EAdM,EAeN,EAfM,EAgBN,EAhBM,EAiBN,EAjBM,EAkBN,EAlBM,EAmBN,EAnBM,EAoBN,EApBM,EAqBN,EArBM,EAsBN,EAtBM,EAuBN,EAvBM,EAwBN,EAxBM,EAyBN,EAzBM,EA0BN,EA1BM,EA2BN,EA3BM,CADG;AA8BXC,IAAAA,QAAQ,EAAE,CACR;AACEF,MAAAA,IAAI,EAAEL,WAAW,CAAC,EAAD,CADnB;AAEEQ,MAAAA,IAAI,EAAE,IAFR;AAGEC,MAAAA,eAAe,EAAE,WAHnB;AAIEC,MAAAA,WAAW,EAAE,SAJf;AAKEC,MAAAA,WAAW,EAAE;AALf,KADQ;AA9BC,GAAb;AAyCA,QAAMC,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE;AACNC,MAAAA,CAAC,EAAE;AACDC,QAAAA,OAAO,EAAE;AADR,OADG;AAINC,MAAAA,CAAC,EAAE;AACDD,QAAAA,OAAO,EAAE;AADR;AAJG,KADM;AASdE,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AACNH,QAAAA,OAAO,EAAE;AADH;AADD,KATK;AAcdI,IAAAA,MAAM,EAAE,CAdM;AAedC,IAAAA,OAAO,EAAE;AAfK,GAAhB;AAkBA,sBACE;AAAA,cACGrB,OAAO,CAACE,GAAR,CAAaC,MAAD,IAAY;AACvB,0BACE;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEG,IAAZ;AAAkB,UAAA,OAAO,EAAEO;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF,uBADF;AAKD,KANA;AADH,mBADF;AAWD,CAhFD;;KAAMd,S;AAkFN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst LineChart = ({ history }) => {\r\n  /*   const ctx = canvas.getContext(\"2d\");\r\n  const gradient = ctx.createLinearGradient(0, 0, 0, 500);\r\n  gradient.addColorStop(0, \"rgba(34, 153, 84,0.4)\");\r\n  gradient.addColorStop(1, \"rgba(34, 153, 84,0.01)\"); // rgba color is required. */\r\n\r\n  const coinHistory = history.map((result) => result.history);\r\n\r\n  console.log(coinHistory[0]);\r\n\r\n  const data = {\r\n    labels: [\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n    ],\r\n    datasets: [\r\n      {\r\n        data: coinHistory[67],\r\n        fill: true,\r\n        backgroundColor: \"lightblue\",\r\n        borderColor: \"#218c74\",\r\n        borderWidth: 3,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      y: {\r\n        display: false,\r\n      },\r\n      x: {\r\n        display: false,\r\n      },\r\n    },\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n    radius: 0,\r\n    tension: 0.4,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {history.map((result) => {\r\n        return (\r\n          <>\r\n            <Line data={data} options={options} />\r\n          </>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n"]},"metadata":{},"sourceType":"module"}