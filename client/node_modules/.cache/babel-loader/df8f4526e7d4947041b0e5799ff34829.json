{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\Project\\\\react\\\\crypto-dashboard\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // React Router Setup\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"; // Fetch data\n\nimport axios from \"axios\"; // Firebase\n\nimport { initializeApp } from \"firebase/app\";\nimport firebaseConfig from \"./auth/Firebase\"; // Components\n\nimport Dashboard from \"./components/Dashboard\";\nimport SignUp from \"./components/account/SignUp\";\nimport SignIn from \"./components/account/SignIn\"; // Initialize Firebase\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ninitializeApp(firebaseConfig);\n\nconst App = () => {\n  _s();\n\n  // states\n  const [coins, setCoins] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const [isLogged, setIsLogged] = useState(false);\n  const [user, setUser] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  useEffect(() => {\n    /*     const cryptoApiOptions = {\r\n      method: \"GET\",\r\n      url: \"https://pro-api.coinmarketcap.com/v1/cryptocurrency/listings/latest\",\r\n      headers: {\r\n        \"X-CMC_PRO_API_KEY\": process.env.REACT_APP_COINMARKETCAP_API_KEY,\r\n      },\r\n    };\r\n      axios\r\n      .request(cryptoApiOptions)\r\n      .then(function (res) {\r\n        var parsedData = JSON.parse(JSON.stringify(res));\r\n        console.log(parsedData);\r\n        console.log(parsedData.data.data);\r\n        setCoins(parsedData.data.data);\r\n      })\r\n      .catch(function (err) {\r\n        console.error(err);\r\n      }); */\n\n    /*      const cryptoNewsApiOptions = {\r\n      method: \"GET\",\r\n      url: \"https://crypto-news5.p.rapidapi.com/\",\r\n      headers: {\r\n        \"x-rapidapi-host\": \"crypto-news5.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": process.env.REACT_APP_CRYPTONEWS_API_KEY,\r\n      },\r\n    };\r\n      axios\r\n      .request(cryptoNewsApiOptions)\r\n      .then(function (res) {\r\n        console.log(res);\r\n      })\r\n      .catch(function (err) {\r\n        console.error(err);\r\n      }); */\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      basename: process.env.PUBLIC_URL,\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(SignUp, {\n            user: user,\n            setUser: setUser,\n            email: email,\n            setEmail: setEmail,\n            password: password,\n            setPassword: setPassword,\n            errorMessage: errorMessage,\n            setErrorMessage: setErrorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(SignIn, {\n            isLogged: isLogged,\n            setIsLogged: setIsLogged,\n            user: user,\n            setUser: setUser,\n            email: email,\n            setEmail: setEmail,\n            password: password,\n            setPassword: setPassword,\n            errorMessage: errorMessage,\n            setErrorMessage: setErrorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), isLogged ? /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/dashboard\",\n          children: /*#__PURE__*/_jsxDEV(Dashboard, {\n            coins: coins,\n            search: search,\n            setSearch: setSearch,\n            open: open,\n            setOpen: setOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"aWPcP1B/TWMx7gCYa5I+3MEj/m0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/webdev/Project/react/crypto-dashboard/client/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","axios","initializeApp","firebaseConfig","Dashboard","SignUp","SignIn","App","coins","setCoins","search","setSearch","open","setOpen","isLogged","setIsLogged","user","setUser","email","setEmail","password","setPassword","errorMessage","setErrorMessage","process","env","PUBLIC_URL"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\n// React Router Setup\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\n// Fetch data\r\nimport axios from \"axios\";\r\n\r\n// Firebase\r\nimport { initializeApp } from \"firebase/app\";\r\nimport firebaseConfig from \"./auth/Firebase\";\r\n\r\n// Components\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport SignUp from \"./components/account/SignUp\";\r\nimport SignIn from \"./components/account/SignIn\";\r\n\r\n// Initialize Firebase\r\ninitializeApp(firebaseConfig);\r\n\r\nconst App = () => {\r\n  // states\r\n  const [coins, setCoins] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const [isLogged, setIsLogged] = useState(false);\r\n  const [user, setUser] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    /*     const cryptoApiOptions = {\r\n      method: \"GET\",\r\n      url: \"https://pro-api.coinmarketcap.com/v1/cryptocurrency/listings/latest\",\r\n      headers: {\r\n        \"X-CMC_PRO_API_KEY\": process.env.REACT_APP_COINMARKETCAP_API_KEY,\r\n      },\r\n    };\r\n\r\n    axios\r\n      .request(cryptoApiOptions)\r\n      .then(function (res) {\r\n        var parsedData = JSON.parse(JSON.stringify(res));\r\n        console.log(parsedData);\r\n        console.log(parsedData.data.data);\r\n        setCoins(parsedData.data.data);\r\n      })\r\n      .catch(function (err) {\r\n        console.error(err);\r\n      }); */\r\n    /*      const cryptoNewsApiOptions = {\r\n      method: \"GET\",\r\n      url: \"https://crypto-news5.p.rapidapi.com/\",\r\n      headers: {\r\n        \"x-rapidapi-host\": \"crypto-news5.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": process.env.REACT_APP_CRYPTONEWS_API_KEY,\r\n      },\r\n    };\r\n\r\n    axios\r\n      .request(cryptoNewsApiOptions)\r\n      .then(function (res) {\r\n        console.log(res);\r\n      })\r\n      .catch(function (err) {\r\n        console.error(err);\r\n      }); */\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n          <Route path=\"/signup\">\r\n            <SignUp\r\n              user={user}\r\n              setUser={setUser}\r\n              email={email}\r\n              setEmail={setEmail}\r\n              password={password}\r\n              setPassword={setPassword}\r\n              errorMessage={errorMessage}\r\n              setErrorMessage={setErrorMessage}\r\n            />\r\n          </Route>\r\n          <Route path=\"/login\">\r\n            <SignIn\r\n              isLogged={isLogged}\r\n              setIsLogged={setIsLogged}\r\n              user={user}\r\n              setUser={setUser}\r\n              email={email}\r\n              setEmail={setEmail}\r\n              password={password}\r\n              setPassword={setPassword}\r\n              errorMessage={errorMessage}\r\n              setErrorMessage={setErrorMessage}\r\n            />\r\n          </Route>\r\n          {isLogged ? (\r\n            <Route path=\"/dashboard\">\r\n              <Dashboard\r\n                coins={coins}\r\n                search={search}\r\n                setSearch={setSearch}\r\n                open={open}\r\n                setOpen={setOpen}\r\n              />\r\n            </Route>\r\n          ) : null}\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}