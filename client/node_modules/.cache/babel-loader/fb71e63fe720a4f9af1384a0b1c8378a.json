{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\Project\\\\react\\\\crypto-dashboard\\\\client\\\\src\\\\pages\\\\coininfopage\\\\CoinInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setCoin, setCoinPriceHistory } from \"../../features/coins/coinsSlice\";\nimport { selectKeyword, setNews } from \"../../features/news/newsSlice\"; // Components\n\nimport Spinner from \"../../components/loader/Spinner.jsx\";\nimport CoinIntro from \"../../components/coininfo/CoinIntro.jsx\";\nimport TimePeriodBar from \"../../components/coininfo/TimePeriodBar.jsx\";\nimport LineChart from \"../../components/linechart/LineChart\";\nimport CoinPriceStat from \"../../components/coininfo/CoinPriceStat.jsx\";\nimport CoinDesc from \"../../components/coininfo/CoinDesc.jsx\";\nimport News from \"../../components/news/News.jsx\"; // Services\n\nimport { useGetCoinQuery, useGetCoinPriceHistoryQuery, useGetNewsQuery } from \"../../services/cryptoApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CoinInfo = () => {\n  _s();\n\n  var _getCoinApi$data, _getCoinPriceHistoryA;\n\n  const dispatch = useDispatch();\n  const keyword = useSelector(selectKeyword);\n  const {\n    uuid\n  } = useParams();\n  const [timePeriod, setTimePeriod] = useState(\"24h\"); // Coinranking API call\n\n  const {\n    data: getCoinApi,\n    isFetching: isCoinFetching\n  } = useGetCoinQuery(uuid);\n  dispatch(setCoin(getCoinApi === null || getCoinApi === void 0 ? void 0 : (_getCoinApi$data = getCoinApi.data) === null || _getCoinApi$data === void 0 ? void 0 : _getCoinApi$data.coin));\n  const {\n    data: getCoinPriceHistoryApi,\n    isFetching: isCoinPriceHistoryFetching\n  } = useGetCoinPriceHistoryQuery({\n    uuid,\n    timePeriod\n  });\n  const response = getCoinPriceHistoryApi === null || getCoinPriceHistoryApi === void 0 ? void 0 : (_getCoinPriceHistoryA = getCoinPriceHistoryApi.data) === null || _getCoinPriceHistoryA === void 0 ? void 0 : _getCoinPriceHistoryA.history;\n  const unflattedCoinHistory = [];\n\n  if (response) {\n    const reversedCoinHistory = [...response].reverse();\n    unflattedCoinHistory.push(reversedCoinHistory);\n  }\n\n  const coinPriceHistory = unflattedCoinHistory.flat(1);\n  dispatch(setCoinPriceHistory(coinPriceHistory)); // News API call\n\n  const {\n    data: newsApi,\n    isFetching: isNewsFetching\n  } = useGetNewsQuery({\n    keyword,\n    pageSize: \"5\"\n  });\n  dispatch(setNews(newsApi === null || newsApi === void 0 ? void 0 : newsApi.articles));\n  const chartLabel = [];\n  const chartStat = [];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [(isCoinFetching || isNewsFetching) && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center h-full\",\n        children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false), !isCoinFetching && !isNewsFetching && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid h-full grid-cols-3 gap-16 p-20 overflow-auto bg-red-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full col-span-2 bg-blue-200\",\n          children: [/*#__PURE__*/_jsxDEV(CoinIntro, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-end\",\n              children: /*#__PURE__*/_jsxDEV(TimePeriodBar, {\n                timePeriod: timePeriod,\n                setTimePeriod: setTimePeriod\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-center mt-52 h-96\",\n              children: isCoinPriceHistoryFetching ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(LineChart, {\n                coinInfo: true,\n                chartLabel: chartLabel,\n                chartStat: chartStat,\n                priceChange: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col w-full p-10 space-y-4 bg-green-200\",\n          children: [/*#__PURE__*/_jsxDEV(CoinPriceStat, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CoinDesc, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n};\n\n_s(CoinInfo, \"AHksUMOZlaCsmJq11VJpAMREtkk=\", false, function () {\n  return [useDispatch, useSelector, useParams, useGetCoinQuery, useGetCoinPriceHistoryQuery, useGetNewsQuery];\n});\n\n_c = CoinInfo;\nexport default CoinInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinInfo\");","map":{"version":3,"sources":["D:/webdev/Project/react/crypto-dashboard/client/src/pages/coininfopage/CoinInfo.jsx"],"names":["useState","useParams","useSelector","useDispatch","setCoin","setCoinPriceHistory","selectKeyword","setNews","Spinner","CoinIntro","TimePeriodBar","LineChart","CoinPriceStat","CoinDesc","News","useGetCoinQuery","useGetCoinPriceHistoryQuery","useGetNewsQuery","CoinInfo","dispatch","keyword","uuid","timePeriod","setTimePeriod","data","getCoinApi","isFetching","isCoinFetching","coin","getCoinPriceHistoryApi","isCoinPriceHistoryFetching","response","history","unflattedCoinHistory","reversedCoinHistory","reverse","push","coinPriceHistory","flat","newsApi","isNewsFetching","pageSize","articles","chartLabel","chartStat"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { setCoin, setCoinPriceHistory } from \"../../features/coins/coinsSlice\";\r\nimport { selectKeyword, setNews } from \"../../features/news/newsSlice\";\r\n\r\n// Components\r\nimport Spinner from \"../../components/loader/Spinner.jsx\";\r\nimport CoinIntro from \"../../components/coininfo/CoinIntro.jsx\";\r\nimport TimePeriodBar from \"../../components/coininfo/TimePeriodBar.jsx\";\r\nimport LineChart from \"../../components/linechart/LineChart\";\r\nimport CoinPriceStat from \"../../components/coininfo/CoinPriceStat.jsx\";\r\nimport CoinDesc from \"../../components/coininfo/CoinDesc.jsx\";\r\nimport News from \"../../components/news/News.jsx\";\r\n\r\n// Services\r\nimport {\r\n  useGetCoinQuery,\r\n  useGetCoinPriceHistoryQuery,\r\n  useGetNewsQuery,\r\n} from \"../../services/cryptoApi\";\r\n\r\nconst CoinInfo = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const keyword = useSelector(selectKeyword);\r\n\r\n  const { uuid } = useParams();\r\n\r\n  const [timePeriod, setTimePeriod] = useState(\"24h\");\r\n\r\n  // Coinranking API call\r\n  const { data: getCoinApi, isFetching: isCoinFetching } =\r\n    useGetCoinQuery(uuid);\r\n\r\n  dispatch(setCoin(getCoinApi?.data?.coin));\r\n\r\n  const {\r\n    data: getCoinPriceHistoryApi,\r\n    isFetching: isCoinPriceHistoryFetching,\r\n  } = useGetCoinPriceHistoryQuery({ uuid, timePeriod });\r\n\r\n  const response = getCoinPriceHistoryApi?.data?.history;\r\n\r\n  const unflattedCoinHistory = [];\r\n\r\n  if (response) {\r\n    const reversedCoinHistory = [...response].reverse();\r\n\r\n    unflattedCoinHistory.push(reversedCoinHistory);\r\n  }\r\n\r\n  const coinPriceHistory = unflattedCoinHistory.flat(1);\r\n\r\n  dispatch(setCoinPriceHistory(coinPriceHistory));\r\n\r\n  // News API call\r\n  const { data: newsApi, isFetching: isNewsFetching } = useGetNewsQuery({\r\n    keyword,\r\n    pageSize: \"5\",\r\n  });\r\n\r\n  dispatch(setNews(newsApi?.articles));\r\n\r\n  const chartLabel = [];\r\n  const chartStat = [];\r\n\r\n  return (\r\n    <>\r\n      {(isCoinFetching || isNewsFetching) && (\r\n        <>\r\n          <div className=\"flex items-center justify-center h-full\">\r\n            <Spinner />\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {!isCoinFetching && !isNewsFetching && (\r\n        <>\r\n          <div className=\"grid h-full grid-cols-3 gap-16 p-20 overflow-auto bg-red-200\">\r\n            <div className=\"w-full col-span-2 bg-blue-200\">\r\n              <CoinIntro />\r\n              <div className=\"mt-10\">\r\n                <div className=\"flex justify-end\">\r\n                  <TimePeriodBar\r\n                    timePeriod={timePeriod}\r\n                    setTimePeriod={setTimePeriod}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"flex items-center justify-center mt-52 h-96\">\r\n                  {isCoinPriceHistoryFetching ? (\r\n                    <>\r\n                      <Spinner />\r\n                    </>\r\n                  ) : (\r\n                    <LineChart\r\n                      coinInfo\r\n                      chartLabel={chartLabel}\r\n                      chartStat={chartStat}\r\n                      priceChange\r\n                    />\r\n                  )}\r\n                </div>\r\n\r\n                {/*                 <div>\r\n                  <News />\r\n                </div> */}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex flex-col w-full p-10 space-y-4 bg-green-200\">\r\n              <CoinPriceStat />\r\n              <CoinDesc />\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CoinInfo;\r\n"]},"metadata":{},"sourceType":"module"}